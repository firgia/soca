// Mocks generated by Mockito 5.3.2 from annotations
// in soca/test/mock/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i30;
import 'dart:developer' as _i40;
import 'dart:io' as _i32;
import 'dart:typed_data' as _i37;
import 'dart:ui' as _i14;

import 'package:cloud_functions/cloud_functions.dart' as _i9;
import 'package:cloud_functions_platform_interface/cloud_functions_platform_interface.dart'
    as _i8;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i35;
import 'package:firebase_core/firebase_core.dart' as _i6;
import 'package:firebase_storage/firebase_storage.dart' as _i3;
import 'package:flutter/foundation.dart' as _i39;
import 'package:flutter/gestures.dart' as _i17;
import 'package:flutter/material.dart' as _i15;
import 'package:flutter/rendering.dart' as _i18;
import 'package:flutter/scheduler.dart' as _i38;
import 'package:flutter/services.dart' as _i16;
import 'package:flutter_bloc/flutter_bloc.dart' as _i41;
import 'package:flutter_dotenv/src/dotenv.dart' as _i33;
import 'package:flutter_dotenv/src/parser.dart' as _i34;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i5;
import 'package:google_sign_in/google_sign_in.dart' as _i10;
import 'package:image_cropper/image_cropper.dart' as _i36;
import 'package:image_picker/image_picker.dart' as _i11;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:onesignal_flutter/onesignal_flutter.dart' as _i13;
import 'package:sign_in_with_apple/sign_in_with_apple.dart' as _i2;
import 'package:soca/config/config.dart' as _i28;
import 'package:soca/core/core.dart' as _i29;
import 'package:soca/data/data.dart' as _i22;
import 'package:soca/data/models/models.dart' as _i4;
import 'package:soca/data/providers/functions_provider.dart' as _i31;
import 'package:soca/logic/bloc/file/file_bloc.dart' as _i19;
import 'package:soca/logic/bloc/language/language_bloc.dart' as _i20;
import 'package:soca/logic/bloc/sign_in/sign_in_bloc.dart' as _i21;
import 'package:soca/logic/bloc/sign_up/sign_up_bloc.dart' as _i23;
import 'package:soca/logic/bloc/sign_up_form/sign_up_form_bloc.dart' as _i24;
import 'package:soca/logic/cubit/account/account_cubit.dart' as _i25;
import 'package:soca/logic/cubit/route/route_cubit.dart' as _i26;
import 'package:soca/logic/cubit/sign_out/sign_out_cubit.dart' as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthorizationCredentialAppleID_0 extends _i1.SmartFake
    implements _i2.AuthorizationCredentialAppleID {
  _FakeAuthorizationCredentialAppleID_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskSnapshot_1 extends _i1.SmartFake implements _i3.TaskSnapshot {
  _FakeTaskSnapshot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_2 extends _i1.SmartFake implements _i4.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_3 extends _i1.SmartFake implements _i5.IOSOptions {
  _FakeIOSOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_4 extends _i1.SmartFake
    implements _i5.AndroidOptions {
  _FakeAndroidOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_5 extends _i1.SmartFake implements _i5.LinuxOptions {
  _FakeLinuxOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_6 extends _i1.SmartFake
    implements _i5.WindowsOptions {
  _FakeWindowsOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_7 extends _i1.SmartFake implements _i5.WebOptions {
  _FakeWebOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_8 extends _i1.SmartFake implements _i5.MacOsOptions {
  _FakeMacOsOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_9 extends _i1.SmartFake implements _i6.FirebaseApp {
  _FakeFirebaseApp_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_10 extends _i1.SmartFake
    implements _i7.ActionCodeInfo {
  _FakeActionCodeInfo_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_11 extends _i1.SmartFake
    implements _i7.UserCredential {
  _FakeUserCredential_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_12 extends _i1.SmartFake
    implements _i7.ConfirmationResult {
  _FakeConfirmationResult_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFunctionsPlatform_13 extends _i1.SmartFake
    implements _i8.FirebaseFunctionsPlatform {
  _FakeFirebaseFunctionsPlatform_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallable_14 extends _i1.SmartFake implements _i9.HttpsCallable {
  _FakeHttpsCallable_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignInAuthentication_15 extends _i1.SmartFake
    implements _i10.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallablePlatform_16 extends _i1.SmartFake
    implements _i8.HttpsCallablePlatform {
  _FakeHttpsCallablePlatform_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallableResult_17<T> extends _i1.SmartFake
    implements _i9.HttpsCallableResult<T> {
  _FakeHttpsCallableResult_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_18 extends _i1.SmartFake implements _i7.UserMetadata {
  _FakeUserMetadata_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_19 extends _i1.SmartFake implements _i7.MultiFactor {
  _FakeMultiFactor_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_20 extends _i1.SmartFake implements _i7.IdTokenResult {
  _FakeIdTokenResult_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_21 extends _i1.SmartFake implements _i7.User {
  _FakeUser_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostData_22 extends _i1.SmartFake implements _i11.LostData {
  _FakeLostData_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostDataResponse_23 extends _i1.SmartFake
    implements _i11.LostDataResponse {
  _FakeLostDataResponse_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_24 extends _i1.SmartFake implements Duration {
  _FakeDuration_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddressCheckResult_25 extends _i1.SmartFake
    implements _i12.AddressCheckResult {
  _FakeAddressCheckResult_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOSOutcomeEvent_26 extends _i1.SmartFake
    implements _i13.OSOutcomeEvent {
  _FakeOSOutcomeEvent_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_27 extends _i1.SmartFake implements _i14.Locale {
  _FakeLocale_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFrameData_28 extends _i1.SmartFake implements _i14.FrameData {
  _FakeFrameData_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessibilityFeatures_29 extends _i1.SmartFake
    implements _i14.AccessibilityFeatures {
  _FakeAccessibilityFeatures_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlatformDispatcher_30 extends _i1.SmartFake
    implements _i14.PlatformDispatcher {
  _FakePlatformDispatcher_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeViewConfiguration_31 extends _i1.SmartFake
    implements _i14.ViewConfiguration {
  _FakeViewConfiguration_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRect_32 extends _i1.SmartFake implements _i14.Rect {
  _FakeRect_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSize_33 extends _i1.SmartFake implements _i14.Size {
  _FakeSize_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowPadding_34 extends _i1.SmartFake
    implements _i14.WindowPadding {
  _FakeWindowPadding_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlatformMenuDelegate_35 extends _i1.SmartFake
    implements _i15.PlatformMenuDelegate {
  _FakePlatformMenuDelegate_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusManager_36 extends _i1.SmartFake implements _i15.FocusManager {
  _FakeFocusManager_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSingletonFlutterWindow_37 extends _i1.SmartFake
    implements _i14.SingletonFlutterWindow {
  _FakeSingletonFlutterWindow_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHardwareKeyboard_38 extends _i1.SmartFake
    implements _i16.HardwareKeyboard {
  _FakeHardwareKeyboard_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeKeyEventManager_39 extends _i1.SmartFake
    implements _i16.KeyEventManager {
  _FakeKeyEventManager_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBinaryMessenger_40 extends _i1.SmartFake
    implements _i16.BinaryMessenger {
  _FakeBinaryMessenger_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelBuffers_41 extends _i1.SmartFake
    implements _i14.ChannelBuffers {
  _FakeChannelBuffers_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestorationManager_42 extends _i1.SmartFake
    implements _i16.RestorationManager {
  _FakeRestorationManager_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePointerRouter_43 extends _i1.SmartFake
    implements _i17.PointerRouter {
  _FakePointerRouter_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGestureArenaManager_44 extends _i1.SmartFake
    implements _i17.GestureArenaManager {
  _FakeGestureArenaManager_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePointerSignalResolver_45 extends _i1.SmartFake
    implements _i17.PointerSignalResolver {
  _FakePointerSignalResolver_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMouseTracker_46 extends _i1.SmartFake implements _i18.MouseTracker {
  _FakeMouseTracker_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePipelineOwner_47 extends _i1.SmartFake
    implements _i18.PipelineOwner {
  _FakePipelineOwner_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRenderView_48 extends _i1.SmartFake implements _i18.RenderView {
  _FakeRenderView_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i15.DiagnosticLevel? minLevel = _i15.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeViewConfiguration_49 extends _i1.SmartFake
    implements _i18.ViewConfiguration {
  _FakeViewConfiguration_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSemanticsUpdateBuilder_50 extends _i1.SmartFake
    implements _i14.SemanticsUpdateBuilder {
  _FakeSemanticsUpdateBuilder_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileState_51 extends _i1.SmartFake implements _i19.FileState {
  _FakeFileState_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLanguageState_52 extends _i1.SmartFake
    implements _i20.LanguageState {
  _FakeLanguageState_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignInState_53 extends _i1.SmartFake implements _i21.SignInState {
  _FakeSignInState_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthRepository_54 extends _i1.SmartFake
    implements _i22.AuthRepository {
  _FakeAuthRepository_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignUpState_55 extends _i1.SmartFake implements _i23.SignUpState {
  _FakeSignUpState_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignUpFormState_56 extends _i1.SmartFake
    implements _i24.SignUpFormState {
  _FakeSignUpFormState_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccountState_57 extends _i1.SmartFake implements _i25.AccountState {
  _FakeAccountState_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserRepository_58 extends _i1.SmartFake
    implements _i22.UserRepository {
  _FakeUserRepository_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRouteState_59 extends _i1.SmartFake implements _i26.RouteState {
  _FakeRouteState_59(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignOutState_60 extends _i1.SmartFake implements _i27.SignOutState {
  _FakeSignOutState_60(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppNavigator].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppNavigator extends _i1.Mock implements _i28.AppNavigator {
  @override
  void back<T>(
    _i15.BuildContext? context, {
    T? result,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #back,
          [context],
          {#result: result},
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool canPop(_i15.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [context],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void goToHome(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #goToHome,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToLanguage(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #goToLanguage,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToSplash(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #goToSplash,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToSignIn(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #goToSignIn,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToSignUp(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #goToSignUp,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToUnknownDevice(_i15.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #goToUnknownDevice,
          [context],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DeviceFeedback].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceFeedback extends _i1.Mock implements _i29.DeviceFeedback {
  @override
  void vibrate() => super.noSuchMethod(
        Invocation.method(
          #vibrate,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void playVoiceAssistant(String? message) => super.noSuchMethod(
        Invocation.method(
          #playVoiceAssistant,
          [message],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void enableFeedback({
    bool? enableHaptick,
    bool? enableVoiceAssistant,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #enableFeedback,
          [],
          {
            #enableHaptick: enableHaptick,
            #enableVoiceAssistant: enableVoiceAssistant,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfo extends _i1.Mock implements _i29.DeviceInfo {
  @override
  bool isIOS() => (super.noSuchMethod(
        Invocation.method(
          #isIOS,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool isAndroid() => (super.noSuchMethod(
        Invocation.method(
          #isAndroid,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i30.Future<_i2.AuthorizationCredentialAppleID> getAppleIDCredential({
    required List<_i2.AppleIDAuthorizationScopes>? scopes,
    _i2.WebAuthenticationOptions? webAuthenticationOptions,
    String? nonce,
    String? state,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppleIDCredential,
          [],
          {
            #scopes: scopes,
            #webAuthenticationOptions: webAuthenticationOptions,
            #nonce: nonce,
            #state: state,
          },
        ),
        returnValue: _i30.Future<_i2.AuthorizationCredentialAppleID>.value(
            _FakeAuthorizationCredentialAppleID_0(
          this,
          Invocation.method(
            #getAppleIDCredential,
            [],
            {
              #scopes: scopes,
              #webAuthenticationOptions: webAuthenticationOptions,
              #nonce: nonce,
              #state: state,
            },
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i2.AuthorizationCredentialAppleID>.value(
                _FakeAuthorizationCredentialAppleID_0(
          this,
          Invocation.method(
            #getAppleIDCredential,
            [],
            {
              #scopes: scopes,
              #webAuthenticationOptions: webAuthenticationOptions,
              #nonce: nonce,
              #state: state,
            },
          ),
        )),
      ) as _i30.Future<_i2.AuthorizationCredentialAppleID>);
  @override
  _i30.Future<String?> getDevicePushTokenVoIP() => (super.noSuchMethod(
        Invocation.method(
          #getDevicePushTokenVoIP,
          [],
        ),
        returnValue: _i30.Future<String?>.value(),
        returnValueForMissingStub: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i22.AuthProvider {
  @override
  _i30.Future<_i2.AuthorizationCredentialAppleID> getAppleIDCredential() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppleIDCredential,
          [],
        ),
        returnValue: _i30.Future<_i2.AuthorizationCredentialAppleID>.value(
            _FakeAuthorizationCredentialAppleID_0(
          this,
          Invocation.method(
            #getAppleIDCredential,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i2.AuthorizationCredentialAppleID>.value(
                _FakeAuthorizationCredentialAppleID_0(
          this,
          Invocation.method(
            #getAppleIDCredential,
            [],
          ),
        )),
      ) as _i30.Future<_i2.AuthorizationCredentialAppleID>);
  @override
  _i30.Future<bool?> isSignInOnProcess() => (super.noSuchMethod(
        Invocation.method(
          #isSignInOnProcess,
          [],
        ),
        returnValue: _i30.Future<bool?>.value(),
        returnValueForMissingStub: _i30.Future<bool?>.value(),
      ) as _i30.Future<bool?>);
  @override
  _i30.Future<void> setIsSignInOnProcess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setIsSignInOnProcess,
          [value],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setSignInMethod(_i29.AuthMethod? authMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSignInMethod,
          [authMethod],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i29.AuthMethod?> getSignInMethod() => (super.noSuchMethod(
        Invocation.method(
          #getSignInMethod,
          [],
        ),
        returnValue: _i30.Future<_i29.AuthMethod?>.value(),
        returnValueForMissingStub: _i30.Future<_i29.AuthMethod?>.value(),
      ) as _i30.Future<_i29.AuthMethod?>);
  @override
  _i30.Future<void> notifyIsSignInSuccessfully({
    required String? deviceID,
    required String? oneSignalPlayerID,
    required String? voipToken,
    required _i29.DevicePlatform? devicePlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyIsSignInSuccessfully,
          [],
          {
            #deviceID: deviceID,
            #oneSignalPlayerID: oneSignalPlayerID,
            #voipToken: voipToken,
            #devicePlatform: devicePlatform,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [DeviceProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceProvider extends _i1.Mock implements _i22.DeviceProvider {
  @override
  String get deviceIDKey => (super.noSuchMethod(
        Invocation.getter(#deviceIDKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i30.Future<String> getDeviceID() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceID,
          [],
        ),
        returnValue: _i30.Future<String>.value(''),
        returnValueForMissingStub: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);
  @override
  _i30.Future<String?> getOnesignalPlayerID() => (super.noSuchMethod(
        Invocation.method(
          #getOnesignalPlayerID,
          [],
        ),
        returnValue: _i30.Future<String?>.value(),
        returnValueForMissingStub: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);
  @override
  _i30.Future<String?> getVoIP() => (super.noSuchMethod(
        Invocation.method(
          #getVoIP,
          [],
        ),
        returnValue: _i30.Future<String?>.value(),
        returnValueForMissingStub: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);
}

/// A class which mocks [FunctionsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFunctionsProvider extends _i1.Mock implements _i31.FunctionsProvider {
  @override
  _i30.Future<dynamic> call({
    required String? functionsName,
    dynamic parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #functionsName: functionsName,
            #parameters: parameters,
          },
        ),
        returnValue: _i30.Future<dynamic>.value(),
        returnValueForMissingStub: _i30.Future<dynamic>.value(),
      ) as _i30.Future<dynamic>);
}

/// A class which mocks [LocalLanguageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalLanguageProvider extends _i1.Mock
    implements _i22.LocalLanguageProvider {
  @override
  String get lastChangedKey => (super.noSuchMethod(
        Invocation.getter(#lastChangedKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get lastChangedOnesignalKey => (super.noSuchMethod(
        Invocation.getter(#lastChangedOnesignalKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i30.Future<dynamic> getLanguages() => (super.noSuchMethod(
        Invocation.method(
          #getLanguages,
          [],
        ),
        returnValue: _i30.Future<dynamic>.value(),
        returnValueForMissingStub: _i30.Future<dynamic>.value(),
      ) as _i30.Future<dynamic>);
  @override
  _i30.Future<String?> getLastChanged() => (super.noSuchMethod(
        Invocation.method(
          #getLastChanged,
          [],
        ),
        returnValue: _i30.Future<String?>.value(),
        returnValueForMissingStub: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);
  @override
  _i30.Future<String?> getLastChangedOnesignal() => (super.noSuchMethod(
        Invocation.method(
          #getLastChangedOnesignal,
          [],
        ),
        returnValue: _i30.Future<String?>.value(),
        returnValueForMissingStub: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);
  @override
  _i30.Future<void> updateLastChanged(String? language) => (super.noSuchMethod(
        Invocation.method(
          #updateLastChanged,
          [language],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> updateLastChangedOnesignal(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastChangedOnesignal,
          [language],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [UserProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProvider extends _i1.Mock implements _i22.UserProvider {
  @override
  _i30.Future<void> createUser({
    required _i29.UserType? type,
    required String? name,
    required DateTime? dateOfBirth,
    required _i29.Gender? gender,
    required _i29.DeviceLanguage? deviceLanguage,
    required List<_i4.Language>? languages,
    required String? deviceID,
    required String? oneSignalPlayerID,
    required String? voipToken,
    required _i29.DevicePlatform? devicePlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [],
          {
            #type: type,
            #name: name,
            #dateOfBirth: dateOfBirth,
            #gender: gender,
            #deviceLanguage: deviceLanguage,
            #languages: languages,
            #deviceID: deviceID,
            #oneSignalPlayerID: oneSignalPlayerID,
            #voipToken: voipToken,
            #devicePlatform: devicePlatform,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<dynamic> getProfile({String? uid}) => (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [],
          {#uid: uid},
        ),
        returnValue: _i30.Future<dynamic>.value(),
        returnValueForMissingStub: _i30.Future<dynamic>.value(),
      ) as _i30.Future<dynamic>);
  @override
  _i30.Future<_i3.TaskSnapshot> uploadAvatar({
    required _i32.File? file,
    required String? uid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAvatar,
          [],
          {
            #file: file,
            #uid: uid,
          },
        ),
        returnValue: _i30.Future<_i3.TaskSnapshot>.value(_FakeTaskSnapshot_1(
          this,
          Invocation.method(
            #uploadAvatar,
            [],
            {
              #file: file,
              #uid: uid,
            },
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i3.TaskSnapshot>.value(_FakeTaskSnapshot_1(
          this,
          Invocation.method(
            #uploadAvatar,
            [],
            {
              #file: file,
              #uid: uid,
            },
          ),
        )),
      ) as _i30.Future<_i3.TaskSnapshot>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i22.AuthRepository {
  @override
  _i30.Future<_i29.AuthMethod?> getSignInMethod() => (super.noSuchMethod(
        Invocation.method(
          #getSignInMethod,
          [],
        ),
        returnValue: _i30.Future<_i29.AuthMethod?>.value(),
        returnValueForMissingStub: _i30.Future<_i29.AuthMethod?>.value(),
      ) as _i30.Future<_i29.AuthMethod?>);
  @override
  _i30.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<bool> signInWithApple() => (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<bool> signInWithGoogle() => (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> signUp({
    required _i29.UserType? type,
    required String? name,
    required _i32.File? profileImage,
    required DateTime? dateOfBirth,
    required _i29.Gender? gender,
    required _i29.DeviceLanguage? deviceLanguage,
    required List<_i4.Language>? languages,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #type: type,
            #name: name,
            #profileImage: profileImage,
            #dateOfBirth: dateOfBirth,
            #gender: gender,
            #deviceLanguage: deviceLanguage,
            #languages: languages,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [FileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileRepository extends _i1.Mock implements _i22.FileRepository {
  @override
  _i30.Future<_i32.File?> getProfileImage(_i11.ImageSource? source) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfileImage,
          [source],
        ),
        returnValue: _i30.Future<_i32.File?>.value(),
        returnValueForMissingStub: _i30.Future<_i32.File?>.value(),
      ) as _i30.Future<_i32.File?>);
}

/// A class which mocks [LanguageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageRepository extends _i1.Mock
    implements _i22.LanguageRepository {
  @override
  _i30.Future<List<_i4.Language>> getLanguages() => (super.noSuchMethod(
        Invocation.method(
          #getLanguages,
          [],
        ),
        returnValue: _i30.Future<List<_i4.Language>>.value(<_i4.Language>[]),
        returnValueForMissingStub:
            _i30.Future<List<_i4.Language>>.value(<_i4.Language>[]),
      ) as _i30.Future<List<_i4.Language>>);
  @override
  _i30.Future<_i29.DeviceLanguage?> getLastChanged() => (super.noSuchMethod(
        Invocation.method(
          #getLastChanged,
          [],
        ),
        returnValue: _i30.Future<_i29.DeviceLanguage?>.value(),
        returnValueForMissingStub: _i30.Future<_i29.DeviceLanguage?>.value(),
      ) as _i30.Future<_i29.DeviceLanguage?>);
  @override
  _i30.Future<_i29.DeviceLanguage?> getLastChangedOnesignal() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastChangedOnesignal,
          [],
        ),
        returnValue: _i30.Future<_i29.DeviceLanguage?>.value(),
        returnValueForMissingStub: _i30.Future<_i29.DeviceLanguage?>.value(),
      ) as _i30.Future<_i29.DeviceLanguage?>);
  @override
  _i30.Future<void> updateLastChanged(_i29.DeviceLanguage? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastChanged,
          [language],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> updateLastChangedOnesignal(_i29.DeviceLanguage? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastChangedOnesignal,
          [language],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i22.UserRepository {
  @override
  _i30.Future<_i4.User> getProfile({String? uid}) => (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [],
          {#uid: uid},
        ),
        returnValue: _i30.Future<_i4.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getProfile,
            [],
            {#uid: uid},
          ),
        )),
        returnValueForMissingStub: _i30.Future<_i4.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getProfile,
            [],
            {#uid: uid},
          ),
        )),
      ) as _i30.Future<_i4.User>);
}

/// A class which mocks [DotEnv].
///
/// See the documentation for Mockito's code generation for more information.
class MockDotEnv extends _i1.Mock implements _i33.DotEnv {
  @override
  Map<String, String> get env => (super.noSuchMethod(
        Invocation.getter(#env),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void clean() => super.noSuchMethod(
        Invocation.method(
          #clean,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get(
    String? name, {
    String? fallback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [name],
          {#fallback: fallback},
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String? maybeGet(
    String? name, {
    String? fallback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #maybeGet,
          [name],
          {#fallback: fallback},
        ),
        returnValueForMissingStub: null,
      ) as String?);
  @override
  _i30.Future<void> load({
    String? fileName = r'.env',
    _i34.Parser? parser = const _i34.Parser(),
    Map<String, String>? mergeWith = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
          {
            #fileName: fileName,
            #parser: parser,
            #mergeWith: mergeWith,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void testLoad({
    String? fileInput = r'',
    _i34.Parser? parser = const _i34.Parser(),
    Map<String, String>? mergeWith = const {},
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #testLoad,
          [],
          {
            #fileInput: fileInput,
            #parser: parser,
            #mergeWith: mergeWith,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isEveryDefined(Iterable<String>? vars) => (super.noSuchMethod(
        Invocation.method(
          #isEveryDefined,
          [vars],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i5.FlutterSecureStorage {
  @override
  _i5.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_3(
          this,
          Invocation.getter(#iOptions),
        ),
        returnValueForMissingStub: _FakeIOSOptions_3(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i5.IOSOptions);
  @override
  _i5.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_4(
          this,
          Invocation.getter(#aOptions),
        ),
        returnValueForMissingStub: _FakeAndroidOptions_4(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i5.AndroidOptions);
  @override
  _i5.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_5(
          this,
          Invocation.getter(#lOptions),
        ),
        returnValueForMissingStub: _FakeLinuxOptions_5(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i5.LinuxOptions);
  @override
  _i5.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_6(
          this,
          Invocation.getter(#wOptions),
        ),
        returnValueForMissingStub: _FakeWindowsOptions_6(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i5.WindowsOptions);
  @override
  _i5.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_7(
          this,
          Invocation.getter(#webOptions),
        ),
        returnValueForMissingStub: _FakeWebOptions_7(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i5.WebOptions);
  @override
  _i5.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_8(
          this,
          Invocation.getter(#mOptions),
        ),
        returnValueForMissingStub: _FakeMacOsOptions_8(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i5.MacOsOptions);
  @override
  _i30.Future<void> write({
    required String? key,
    required String? value,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<String?> read({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i30.Future<String?>.value(),
        returnValueForMissingStub: _i30.Future<String?>.value(),
      ) as _i30.Future<String?>);
  @override
  _i30.Future<bool> containsKey({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<void> delete({
    required String? key,
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<Map<String, String>> readAll({
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i30.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i30.Future<Map<String, String>>);
  @override
  _i30.Future<void> deleteAll({
    _i5.IOSOptions? iOptions,
    _i5.AndroidOptions? aOptions,
    _i5.LinuxOptions? lOptions,
    _i5.WebOptions? webOptions,
    _i5.MacOsOptions? mOptions,
    _i5.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i7.FirebaseAuth {
  @override
  _i6.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_9(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_9(
          this,
          Invocation.getter(#app),
        ),
      ) as _i6.FirebaseApp);
  @override
  set app(_i6.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i30.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> useAuthEmulator(
    String? host,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i7.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue:
            _i30.Future<_i7.ActionCodeInfo>.value(_FakeActionCodeInfo_10(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.ActionCodeInfo>.value(_FakeActionCodeInfo_10(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i30.Future<_i7.ActionCodeInfo>);
  @override
  _i30.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i7.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i30.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i30.Future<List<String>>.value(<String>[]),
      ) as _i30.Future<List<String>>);
  @override
  _i30.Future<_i7.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i30.Stream<_i7.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i30.Stream<_i7.User?>.empty(),
        returnValueForMissingStub: _i30.Stream<_i7.User?>.empty(),
      ) as _i30.Stream<_i7.User?>);
  @override
  _i30.Stream<_i7.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i30.Stream<_i7.User?>.empty(),
        returnValueForMissingStub: _i30.Stream<_i7.User?>.empty(),
      ) as _i30.Stream<_i7.User?>);
  @override
  _i30.Stream<_i7.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i30.Stream<_i7.User?>.empty(),
        returnValueForMissingStub: _i30.Stream<_i7.User?>.empty(),
      ) as _i30.Stream<_i7.User?>);
  @override
  _i30.Future<void> sendPasswordResetEmail({
    required String? email,
    _i7.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i7.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setSettings({
    bool? appVerificationDisabledForTesting,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setPersistence(_i7.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i7.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> signInWithCredential(
          _i7.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> signInWithAuthProvider(
          _i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> signInWithProvider(
          _i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue: _i30.Future<_i7.ConfirmationResult>.value(
            _FakeConfirmationResult_12(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub: _i30.Future<_i7.ConfirmationResult>.value(
            _FakeConfirmationResult_12(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i30.Future<_i7.ConfirmationResult>);
  @override
  _i30.Future<_i7.UserCredential> signInWithPopup(
          _i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<void> signInWithRedirect(_i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i30.Future<String>.value(''),
        returnValueForMissingStub: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);
  @override
  _i30.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i7.PhoneMultiFactorInfo? multiFactorInfo,
    required _i7.PhoneVerificationCompleted? verificationCompleted,
    required _i7.PhoneVerificationFailed? verificationFailed,
    required _i7.PhoneCodeSent? codeSent,
    required _i7.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i7.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [FirebaseFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFunctions extends _i1.Mock implements _i9.FirebaseFunctions {
  @override
  _i6.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_9(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_9(
          this,
          Invocation.getter(#app),
        ),
      ) as _i6.FirebaseApp);
  @override
  _i8.FirebaseFunctionsPlatform get delegate => (super.noSuchMethod(
        Invocation.getter(#delegate),
        returnValue: _FakeFirebaseFunctionsPlatform_13(
          this,
          Invocation.getter(#delegate),
        ),
        returnValueForMissingStub: _FakeFirebaseFunctionsPlatform_13(
          this,
          Invocation.getter(#delegate),
        ),
      ) as _i8.FirebaseFunctionsPlatform);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i9.HttpsCallable httpsCallable(
    String? name, {
    _i9.HttpsCallableOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallable,
          [name],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_14(
          this,
          Invocation.method(
            #httpsCallable,
            [name],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeHttpsCallable_14(
          this,
          Invocation.method(
            #httpsCallable,
            [name],
            {#options: options},
          ),
        ),
      ) as _i9.HttpsCallable);
  @override
  void useFunctionsEmulator(
    String? host,
    int? port,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #useFunctionsEmulator,
          [
            host,
            port,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i10.GoogleSignIn {
  @override
  _i10.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i10.SignInOption.standard,
        returnValueForMissingStub: _i10.SignInOption.standard,
      ) as _i10.SignInOption);
  @override
  List<String> get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);
  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i30.Stream<_i10.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i30.Stream<_i10.GoogleSignInAccount?>.empty(),
        returnValueForMissingStub:
            _i30.Stream<_i10.GoogleSignInAccount?>.empty(),
      ) as _i30.Stream<_i10.GoogleSignInAccount?>);
  @override
  _i30.Future<_i10.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
          {
            #suppressErrors: suppressErrors,
            #reAuthenticate: reAuthenticate,
          },
        ),
        returnValue: _i30.Future<_i10.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i30.Future<_i10.GoogleSignInAccount?>.value(),
      ) as _i30.Future<_i10.GoogleSignInAccount?>);
  @override
  _i30.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<_i10.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i30.Future<_i10.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i30.Future<_i10.GoogleSignInAccount?>.value(),
      ) as _i30.Future<_i10.GoogleSignInAccount?>);
  @override
  _i30.Future<_i10.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i30.Future<_i10.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i30.Future<_i10.GoogleSignInAccount?>.value(),
      ) as _i30.Future<_i10.GoogleSignInAccount?>);
  @override
  _i30.Future<_i10.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i30.Future<_i10.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i30.Future<_i10.GoogleSignInAccount?>.value(),
      ) as _i30.Future<_i10.GoogleSignInAccount?>);
  @override
  _i30.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i10.GoogleSignInAuthentication {}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i10.GoogleSignInAccount {
  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i30.Future<_i10.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
        Invocation.getter(#authentication),
        returnValue: _i30.Future<_i10.GoogleSignInAuthentication>.value(
            _FakeGoogleSignInAuthentication_15(
          this,
          Invocation.getter(#authentication),
        )),
        returnValueForMissingStub:
            _i30.Future<_i10.GoogleSignInAuthentication>.value(
                _FakeGoogleSignInAuthentication_15(
          this,
          Invocation.getter(#authentication),
        )),
      ) as _i30.Future<_i10.GoogleSignInAuthentication>);
  @override
  _i30.Future<Map<String, String>> get authHeaders => (super.noSuchMethod(
        Invocation.getter(#authHeaders),
        returnValue: _i30.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i30.Future<Map<String, String>>);
  @override
  _i30.Future<void> clearAuthCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthCache,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [HttpsCallable].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpsCallable extends _i1.Mock implements _i9.HttpsCallable {
  @override
  _i8.HttpsCallablePlatform get delegate => (super.noSuchMethod(
        Invocation.getter(#delegate),
        returnValue: _FakeHttpsCallablePlatform_16(
          this,
          Invocation.getter(#delegate),
        ),
        returnValueForMissingStub: _FakeHttpsCallablePlatform_16(
          this,
          Invocation.getter(#delegate),
        ),
      ) as _i8.HttpsCallablePlatform);
  @override
  _i30.Future<_i9.HttpsCallableResult<T>> call<T>([dynamic parameters]) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [parameters],
        ),
        returnValue: _i30.Future<_i9.HttpsCallableResult<T>>.value(
            _FakeHttpsCallableResult_17<T>(
          this,
          Invocation.method(
            #call,
            [parameters],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i9.HttpsCallableResult<T>>.value(
                _FakeHttpsCallableResult_17<T>(
          this,
          Invocation.method(
            #call,
            [parameters],
          ),
        )),
      ) as _i30.Future<_i9.HttpsCallableResult<T>>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i7.User {
  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i7.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_18(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeUserMetadata_18(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i7.UserMetadata);
  @override
  List<_i7.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i7.UserInfo>[],
        returnValueForMissingStub: <_i7.UserInfo>[],
      ) as List<_i7.UserInfo>);
  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i7.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_19(
          this,
          Invocation.getter(#multiFactor),
        ),
        returnValueForMissingStub: _FakeMultiFactor_19(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i7.MultiFactor);
  @override
  _i30.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i30.Future<String>.value(''),
        returnValueForMissingStub: _i30.Future<String>.value(''),
      ) as _i30.Future<String>);
  @override
  _i30.Future<_i7.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i30.Future<_i7.IdTokenResult>.value(_FakeIdTokenResult_20(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.IdTokenResult>.value(_FakeIdTokenResult_20(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i30.Future<_i7.IdTokenResult>);
  @override
  _i30.Future<_i7.UserCredential> linkWithCredential(
          _i7.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> linkWithProvider(
          _i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> reauthenticateWithProvider(
          _i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<_i7.UserCredential> reauthenticateWithPopup(
          _i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<void> reauthenticateWithRedirect(_i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i7.UserCredential> linkWithPopup(_i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<void> linkWithRedirect(_i35.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i7.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i7.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue: _i30.Future<_i7.ConfirmationResult>.value(
            _FakeConfirmationResult_12(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub: _i30.Future<_i7.ConfirmationResult>.value(
            _FakeConfirmationResult_12(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i30.Future<_i7.ConfirmationResult>);
  @override
  _i30.Future<_i7.UserCredential> reauthenticateWithCredential(
          _i7.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i7.UserCredential>.value(_FakeUserCredential_11(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i30.Future<_i7.UserCredential>);
  @override
  _i30.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> sendEmailVerification(
          [_i7.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i7.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i30.Future<_i7.User>.value(_FakeUser_21(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
        returnValueForMissingStub: _i30.Future<_i7.User>.value(_FakeUser_21(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i30.Future<_i7.User>);
  @override
  _i30.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> updatePhoneNumber(
          _i7.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i7.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [UserCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCredential extends _i1.Mock implements _i7.UserCredential {}

/// A class which mocks [ImageCropper].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageCropper extends _i1.Mock implements _i36.ImageCropper {
  @override
  _i30.Future<_i36.CroppedFile?> cropImage({
    required String? sourcePath,
    int? maxWidth,
    int? maxHeight,
    _i36.CropAspectRatio? aspectRatio,
    List<_i36.CropAspectRatioPreset>? aspectRatioPresets = const [
      _i36.CropAspectRatioPreset.original,
      _i36.CropAspectRatioPreset.square,
      _i36.CropAspectRatioPreset.ratio3x2,
      _i36.CropAspectRatioPreset.ratio4x3,
      _i36.CropAspectRatioPreset.ratio16x9,
    ],
    _i36.CropStyle? cropStyle = _i36.CropStyle.rectangle,
    _i36.ImageCompressFormat? compressFormat = _i36.ImageCompressFormat.jpg,
    int? compressQuality = 90,
    List<_i36.PlatformUiSettings>? uiSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cropImage,
          [],
          {
            #sourcePath: sourcePath,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #aspectRatio: aspectRatio,
            #aspectRatioPresets: aspectRatioPresets,
            #cropStyle: cropStyle,
            #compressFormat: compressFormat,
            #compressQuality: compressQuality,
            #uiSettings: uiSettings,
          },
        ),
        returnValue: _i30.Future<_i36.CroppedFile?>.value(),
        returnValueForMissingStub: _i30.Future<_i36.CroppedFile?>.value(),
      ) as _i30.Future<_i36.CroppedFile?>);
  @override
  _i30.Future<_i36.CroppedFile?> recoverImage() => (super.noSuchMethod(
        Invocation.method(
          #recoverImage,
          [],
        ),
        returnValue: _i30.Future<_i36.CroppedFile?>.value(),
        returnValueForMissingStub: _i30.Future<_i36.CroppedFile?>.value(),
      ) as _i30.Future<_i36.CroppedFile?>);
}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i1.Mock implements _i11.ImagePicker {
  @override
  _i30.Future<_i11.PickedFile?> getImage({
    required _i11.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i11.CameraDevice? preferredCameraDevice = _i11.CameraDevice.rear,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
          },
        ),
        returnValue: _i30.Future<_i11.PickedFile?>.value(),
        returnValueForMissingStub: _i30.Future<_i11.PickedFile?>.value(),
      ) as _i30.Future<_i11.PickedFile?>);
  @override
  _i30.Future<List<_i11.PickedFile>?> getMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
          },
        ),
        returnValue: _i30.Future<List<_i11.PickedFile>?>.value(),
        returnValueForMissingStub: _i30.Future<List<_i11.PickedFile>?>.value(),
      ) as _i30.Future<List<_i11.PickedFile>?>);
  @override
  _i30.Future<_i11.PickedFile?> getVideo({
    required _i11.ImageSource? source,
    _i11.CameraDevice? preferredCameraDevice = _i11.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i30.Future<_i11.PickedFile?>.value(),
        returnValueForMissingStub: _i30.Future<_i11.PickedFile?>.value(),
      ) as _i30.Future<_i11.PickedFile?>);
  @override
  _i30.Future<_i11.LostData> getLostData() => (super.noSuchMethod(
        Invocation.method(
          #getLostData,
          [],
        ),
        returnValue: _i30.Future<_i11.LostData>.value(_FakeLostData_22(
          this,
          Invocation.method(
            #getLostData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i11.LostData>.value(_FakeLostData_22(
          this,
          Invocation.method(
            #getLostData,
            [],
          ),
        )),
      ) as _i30.Future<_i11.LostData>);
  @override
  _i30.Future<_i11.XFile?> pickImage({
    required _i11.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i11.CameraDevice? preferredCameraDevice = _i11.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i30.Future<_i11.XFile?>.value(),
        returnValueForMissingStub: _i30.Future<_i11.XFile?>.value(),
      ) as _i30.Future<_i11.XFile?>);
  @override
  _i30.Future<List<_i11.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i30.Future<List<_i11.XFile>>.value(<_i11.XFile>[]),
        returnValueForMissingStub:
            _i30.Future<List<_i11.XFile>>.value(<_i11.XFile>[]),
      ) as _i30.Future<List<_i11.XFile>>);
  @override
  _i30.Future<_i11.XFile?> pickVideo({
    required _i11.ImageSource? source,
    _i11.CameraDevice? preferredCameraDevice = _i11.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i30.Future<_i11.XFile?>.value(),
        returnValueForMissingStub: _i30.Future<_i11.XFile?>.value(),
      ) as _i30.Future<_i11.XFile?>);
  @override
  _i30.Future<_i11.LostDataResponse> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue:
            _i30.Future<_i11.LostDataResponse>.value(_FakeLostDataResponse_23(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i11.LostDataResponse>.value(_FakeLostDataResponse_23(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
      ) as _i30.Future<_i11.LostDataResponse>);
}

/// A class which mocks [InternetConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnectionChecker extends _i1.Mock
    implements _i12.InternetConnectionChecker {
  @override
  Duration get checkInterval => (super.noSuchMethod(
        Invocation.getter(#checkInterval),
        returnValue: _FakeDuration_24(
          this,
          Invocation.getter(#checkInterval),
        ),
        returnValueForMissingStub: _FakeDuration_24(
          this,
          Invocation.getter(#checkInterval),
        ),
      ) as Duration);
  @override
  Duration get checkTimeout => (super.noSuchMethod(
        Invocation.getter(#checkTimeout),
        returnValue: _FakeDuration_24(
          this,
          Invocation.getter(#checkTimeout),
        ),
        returnValueForMissingStub: _FakeDuration_24(
          this,
          Invocation.getter(#checkTimeout),
        ),
      ) as Duration);
  @override
  List<_i12.AddressCheckOptions> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i12.AddressCheckOptions>[],
        returnValueForMissingStub: <_i12.AddressCheckOptions>[],
      ) as List<_i12.AddressCheckOptions>);
  @override
  set addresses(List<_i12.AddressCheckOptions>? value) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<bool> get hasConnection => (super.noSuchMethod(
        Invocation.getter(#hasConnection),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<_i12.InternetConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i30.Future<_i12.InternetConnectionStatus>.value(
            _i12.InternetConnectionStatus.connected),
        returnValueForMissingStub:
            _i30.Future<_i12.InternetConnectionStatus>.value(
                _i12.InternetConnectionStatus.connected),
      ) as _i30.Future<_i12.InternetConnectionStatus>);
  @override
  _i30.Stream<_i12.InternetConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i30.Stream<_i12.InternetConnectionStatus>.empty(),
        returnValueForMissingStub:
            _i30.Stream<_i12.InternetConnectionStatus>.empty(),
      ) as _i30.Stream<_i12.InternetConnectionStatus>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isActivelyChecking => (super.noSuchMethod(
        Invocation.getter(#isActivelyChecking),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i30.Future<_i12.AddressCheckResult> isHostReachable(
          _i12.AddressCheckOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHostReachable,
          [options],
        ),
        returnValue: _i30.Future<_i12.AddressCheckResult>.value(
            _FakeAddressCheckResult_25(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
        returnValueForMissingStub: _i30.Future<_i12.AddressCheckResult>.value(
            _FakeAddressCheckResult_25(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
      ) as _i30.Future<_i12.AddressCheckResult>);
}

/// A class which mocks [OneSignal].
///
/// See the documentation for Mockito's code generation for more information.
class MockOneSignal extends _i1.Mock implements _i13.OneSignal {
  @override
  _i30.Future<void> setAppId(String? appId) => (super.noSuchMethod(
        Invocation.method(
          #setAppId,
          [appId],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setLogLevel(
    _i13.OSLogLevel? logLevel,
    _i13.OSLogLevel? visualLevel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [
            logLevel,
            visualLevel,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void setNotificationOpenedHandler(_i13.OpenedNotificationHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setNotificationOpenedHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setSubscriptionObserver(_i13.SubscriptionChangedHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setSubscriptionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPermissionObserver(_i13.PermissionChangeHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setPermissionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setEmailSubscriptionObserver(
          _i13.EmailSubscriptionChangeHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setEmailSubscriptionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setSMSSubscriptionObserver(_i13.SMSSubscriptionChangeHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setSMSSubscriptionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setInAppMessageClickedHandler(
          _i13.InAppMessageClickedHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setInAppMessageClickedHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnWillDisplayInAppMessageHandler(
          _i13.OnWillDisplayInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnWillDisplayInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnDidDisplayInAppMessageHandler(
          _i13.OnDidDisplayInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnDidDisplayInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnWillDismissInAppMessageHandler(
          _i13.OnWillDismissInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnWillDismissInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnDidDismissInAppMessageHandler(
          _i13.OnDidDismissInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnDidDismissInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setNotificationWillShowInForegroundHandler(
          _i13.NotificationWillShowInForegroundHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setNotificationWillShowInForegroundHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void completeNotification(
    String? notificationId,
    bool? shouldDisplay,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #completeNotification,
          [
            notificationId,
            shouldDisplay,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> setLaunchURLsInApp(bool? isEnabled) => (super.noSuchMethod(
        Invocation.method(
          #setLaunchURLsInApp,
          [isEnabled],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setRequiresUserPrivacyConsent(bool? required) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRequiresUserPrivacyConsent,
          [required],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> consentGranted(bool? granted) => (super.noSuchMethod(
        Invocation.method(
          #consentGranted,
          [granted],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<bool> userProvidedPrivacyConsent() => (super.noSuchMethod(
        Invocation.method(
          #userProvidedPrivacyConsent,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<bool> requiresUserPrivacyConsent() => (super.noSuchMethod(
        Invocation.method(
          #requiresUserPrivacyConsent,
          [],
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<bool> promptUserForPushNotificationPermission(
          {bool? fallbackToSettings = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #promptUserForPushNotificationPermission,
          [],
          {#fallbackToSettings: fallbackToSettings},
        ),
        returnValue: _i30.Future<bool>.value(false),
        returnValueForMissingStub: _i30.Future<bool>.value(false),
      ) as _i30.Future<bool>);
  @override
  _i30.Future<Map<String, dynamic>> sendTag(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTag,
          [
            key,
            value,
          ],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> sendTags(Map<String, dynamic>? tags) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTags,
          [tags],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> getTags() => (super.noSuchMethod(
        Invocation.method(
          #getTags,
          [],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> deleteTag(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTag,
          [key],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> deleteTags(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTags,
          [keys],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<_i13.OSDeviceState?> getDeviceState() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceState,
          [],
        ),
        returnValue: _i30.Future<_i13.OSDeviceState?>.value(),
        returnValueForMissingStub: _i30.Future<_i13.OSDeviceState?>.value(),
      ) as _i30.Future<_i13.OSDeviceState?>);
  @override
  _i30.Future<void> disablePush(bool? disable) => (super.noSuchMethod(
        Invocation.method(
          #disablePush,
          [disable],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<Map<String, dynamic>> postNotificationWithJson(
          Map<String, dynamic>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #postNotificationWithJson,
          [json],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> postNotification(
          _i13.OSCreateNotification? notification) =>
      (super.noSuchMethod(
        Invocation.method(
          #postNotification,
          [notification],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<void> clearOneSignalNotifications() => (super.noSuchMethod(
        Invocation.method(
          #clearOneSignalNotifications,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> enterLiveActivity(
    String? activityId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #enterLiveActivity,
          [
            activityId,
            token,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> exitLiveActivity(String? activityId) => (super.noSuchMethod(
        Invocation.method(
          #exitLiveActivity,
          [activityId],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void removeNotification(int? notificationId) => super.noSuchMethod(
        Invocation.method(
          #removeNotification,
          [notificationId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> promptLocationPermission() => (super.noSuchMethod(
        Invocation.method(
          #promptLocationPermission,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setLocationShared(bool? shared) => (super.noSuchMethod(
        Invocation.method(
          #setLocationShared,
          [shared],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> setEmail({
    required String? email,
    String? emailAuthHashToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEmail,
          [],
          {
            #email: email,
            #emailAuthHashToken: emailAuthHashToken,
          },
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> logoutEmail() => (super.noSuchMethod(
        Invocation.method(
          #logoutEmail,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<Map<String, dynamic>> setSMSNumber({
    required String? smsNumber,
    String? smsAuthHashToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSMSNumber,
          [],
          {
            #smsNumber: smsNumber,
            #smsAuthHashToken: smsAuthHashToken,
          },
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> logoutSMSNumber() => (super.noSuchMethod(
        Invocation.method(
          #logoutSMSNumber,
          [],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> setExternalUserId(
    String? externalId, [
    String? authHashToken,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExternalUserId,
          [
            externalId,
            authHashToken,
          ],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> removeExternalUserId() =>
      (super.noSuchMethod(
        Invocation.method(
          #removeExternalUserId,
          [],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<Map<String, dynamic>> setLanguage(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i30.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i30.Future<Map<String, dynamic>>);
  @override
  _i30.Future<void> addTrigger(
    String? key,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTrigger,
          [
            key,
            value,
          ],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> addTriggers(Map<String, Object>? triggers) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTriggers,
          [triggers],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> removeTriggerForKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeTriggerForKey,
          [key],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> removeTriggersForKeys(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTriggersForKeys,
          [keys],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<Object?> getTriggerValueForKey(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTriggerValueForKey,
          [key],
        ),
        returnValue: _i30.Future<Object?>.value(),
        returnValueForMissingStub: _i30.Future<Object?>.value(),
      ) as _i30.Future<Object?>);
  @override
  _i30.Future<void> pauseInAppMessages(bool? pause) => (super.noSuchMethod(
        Invocation.method(
          #pauseInAppMessages,
          [pause],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<_i13.OSOutcomeEvent> sendOutcome(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOutcome,
          [name],
        ),
        returnValue:
            _i30.Future<_i13.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_26(
          this,
          Invocation.method(
            #sendOutcome,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i13.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_26(
          this,
          Invocation.method(
            #sendOutcome,
            [name],
          ),
        )),
      ) as _i30.Future<_i13.OSOutcomeEvent>);
  @override
  _i30.Future<_i13.OSOutcomeEvent> sendUniqueOutcome(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendUniqueOutcome,
          [name],
        ),
        returnValue:
            _i30.Future<_i13.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_26(
          this,
          Invocation.method(
            #sendUniqueOutcome,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i13.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_26(
          this,
          Invocation.method(
            #sendUniqueOutcome,
            [name],
          ),
        )),
      ) as _i30.Future<_i13.OSOutcomeEvent>);
  @override
  _i30.Future<_i13.OSOutcomeEvent> sendOutcomeWithValue(
    String? name,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOutcomeWithValue,
          [
            name,
            value,
          ],
        ),
        returnValue:
            _i30.Future<_i13.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_26(
          this,
          Invocation.method(
            #sendOutcomeWithValue,
            [
              name,
              value,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i30.Future<_i13.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_26(
          this,
          Invocation.method(
            #sendOutcomeWithValue,
            [
              name,
              value,
            ],
          ),
        )),
      ) as _i30.Future<_i13.OSOutcomeEvent>);
}

/// A class which mocks [SingletonFlutterWindow].
///
/// See the documentation for Mockito's code generation for more information.
class MockSingletonFlutterWindow extends _i1.Mock
    implements _i14.SingletonFlutterWindow {
  @override
  set onMetricsChanged(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onMetricsChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_27(
          this,
          Invocation.getter(#locale),
        ),
        returnValueForMissingStub: _FakeLocale_27(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i14.Locale);
  @override
  List<_i14.Locale> get locales => (super.noSuchMethod(
        Invocation.getter(#locales),
        returnValue: <_i14.Locale>[],
        returnValueForMissingStub: <_i14.Locale>[],
      ) as List<_i14.Locale>);
  @override
  set onLocaleChanged(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onLocaleChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get initialLifecycleState => (super.noSuchMethod(
        Invocation.getter(#initialLifecycleState),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  double get textScaleFactor => (super.noSuchMethod(
        Invocation.getter(#textScaleFactor),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  bool get nativeSpellCheckServiceDefined => (super.noSuchMethod(
        Invocation.getter(#nativeSpellCheckServiceDefined),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get brieflyShowPassword => (super.noSuchMethod(
        Invocation.getter(#brieflyShowPassword),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get alwaysUse24HourFormat => (super.noSuchMethod(
        Invocation.getter(#alwaysUse24HourFormat),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set onTextScaleFactorChanged(_i14.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onTextScaleFactorChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Brightness get platformBrightness => (super.noSuchMethod(
        Invocation.getter(#platformBrightness),
        returnValue: _i14.Brightness.dark,
        returnValueForMissingStub: _i14.Brightness.dark,
      ) as _i14.Brightness);
  @override
  set onPlatformBrightnessChanged(_i14.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPlatformBrightnessChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onSystemFontFamilyChanged(_i14.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSystemFontFamilyChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onBeginFrame(_i14.FrameCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onBeginFrame,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onDrawFrame(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onDrawFrame,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onReportTimings(_i14.TimingsCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onReportTimings,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onPointerDataPacket(_i14.PointerDataPacketCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPointerDataPacket,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onKeyData(_i14.KeyDataCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onKeyData,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get defaultRouteName => (super.noSuchMethod(
        Invocation.getter(#defaultRouteName),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  bool get semanticsEnabled => (super.noSuchMethod(
        Invocation.getter(#semanticsEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set onSemanticsEnabledChanged(_i14.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSemanticsEnabledChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.FrameData get frameData => (super.noSuchMethod(
        Invocation.getter(#frameData),
        returnValue: _FakeFrameData_28(
          this,
          Invocation.getter(#frameData),
        ),
        returnValueForMissingStub: _FakeFrameData_28(
          this,
          Invocation.getter(#frameData),
        ),
      ) as _i14.FrameData);
  @override
  set onFrameDataChanged(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.setter(
          #onFrameDataChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onSemanticsAction(_i14.SemanticsActionCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSemanticsAction,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.AccessibilityFeatures get accessibilityFeatures => (super.noSuchMethod(
        Invocation.getter(#accessibilityFeatures),
        returnValue: _FakeAccessibilityFeatures_29(
          this,
          Invocation.getter(#accessibilityFeatures),
        ),
        returnValueForMissingStub: _FakeAccessibilityFeatures_29(
          this,
          Invocation.getter(#accessibilityFeatures),
        ),
      ) as _i14.AccessibilityFeatures);
  @override
  set onAccessibilityFeaturesChanged(_i14.VoidCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onAccessibilityFeaturesChanged,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onPlatformMessage(_i14.PlatformMessageCallback? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #onPlatformMessage,
          callback,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.PlatformDispatcher get platformDispatcher => (super.noSuchMethod(
        Invocation.getter(#platformDispatcher),
        returnValue: _FakePlatformDispatcher_30(
          this,
          Invocation.getter(#platformDispatcher),
        ),
        returnValueForMissingStub: _FakePlatformDispatcher_30(
          this,
          Invocation.getter(#platformDispatcher),
        ),
      ) as _i14.PlatformDispatcher);
  @override
  _i14.ViewConfiguration get viewConfiguration => (super.noSuchMethod(
        Invocation.getter(#viewConfiguration),
        returnValue: _FakeViewConfiguration_31(
          this,
          Invocation.getter(#viewConfiguration),
        ),
        returnValueForMissingStub: _FakeViewConfiguration_31(
          this,
          Invocation.getter(#viewConfiguration),
        ),
      ) as _i14.ViewConfiguration);
  @override
  double get devicePixelRatio => (super.noSuchMethod(
        Invocation.getter(#devicePixelRatio),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);
  @override
  _i14.Rect get physicalGeometry => (super.noSuchMethod(
        Invocation.getter(#physicalGeometry),
        returnValue: _FakeRect_32(
          this,
          Invocation.getter(#physicalGeometry),
        ),
        returnValueForMissingStub: _FakeRect_32(
          this,
          Invocation.getter(#physicalGeometry),
        ),
      ) as _i14.Rect);
  @override
  _i14.Size get physicalSize => (super.noSuchMethod(
        Invocation.getter(#physicalSize),
        returnValue: _FakeSize_33(
          this,
          Invocation.getter(#physicalSize),
        ),
        returnValueForMissingStub: _FakeSize_33(
          this,
          Invocation.getter(#physicalSize),
        ),
      ) as _i14.Size);
  @override
  _i14.WindowPadding get viewInsets => (super.noSuchMethod(
        Invocation.getter(#viewInsets),
        returnValue: _FakeWindowPadding_34(
          this,
          Invocation.getter(#viewInsets),
        ),
        returnValueForMissingStub: _FakeWindowPadding_34(
          this,
          Invocation.getter(#viewInsets),
        ),
      ) as _i14.WindowPadding);
  @override
  _i14.WindowPadding get viewPadding => (super.noSuchMethod(
        Invocation.getter(#viewPadding),
        returnValue: _FakeWindowPadding_34(
          this,
          Invocation.getter(#viewPadding),
        ),
        returnValueForMissingStub: _FakeWindowPadding_34(
          this,
          Invocation.getter(#viewPadding),
        ),
      ) as _i14.WindowPadding);
  @override
  _i14.WindowPadding get systemGestureInsets => (super.noSuchMethod(
        Invocation.getter(#systemGestureInsets),
        returnValue: _FakeWindowPadding_34(
          this,
          Invocation.getter(#systemGestureInsets),
        ),
        returnValueForMissingStub: _FakeWindowPadding_34(
          this,
          Invocation.getter(#systemGestureInsets),
        ),
      ) as _i14.WindowPadding);
  @override
  _i14.WindowPadding get padding => (super.noSuchMethod(
        Invocation.getter(#padding),
        returnValue: _FakeWindowPadding_34(
          this,
          Invocation.getter(#padding),
        ),
        returnValueForMissingStub: _FakeWindowPadding_34(
          this,
          Invocation.getter(#padding),
        ),
      ) as _i14.WindowPadding);
  @override
  List<_i14.DisplayFeature> get displayFeatures => (super.noSuchMethod(
        Invocation.getter(#displayFeatures),
        returnValue: <_i14.DisplayFeature>[],
        returnValueForMissingStub: <_i14.DisplayFeature>[],
      ) as List<_i14.DisplayFeature>);
  @override
  _i14.Locale? computePlatformResolvedLocale(
          List<_i14.Locale>? supportedLocales) =>
      (super.noSuchMethod(
        Invocation.method(
          #computePlatformResolvedLocale,
          [supportedLocales],
        ),
        returnValueForMissingStub: null,
      ) as _i14.Locale?);
  @override
  void scheduleFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void sendPlatformMessage(
    String? name,
    _i37.ByteData? data,
    _i14.PlatformMessageResponseCallback? callback,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sendPlatformMessage,
          [
            name,
            data,
            callback,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setIsolateDebugName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setIsolateDebugName,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void render(_i14.Scene? scene) => super.noSuchMethod(
        Invocation.method(
          #render,
          [scene],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateSemantics(_i14.SemanticsUpdate? update) => super.noSuchMethod(
        Invocation.method(
          #updateSemantics,
          [update],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WidgetsBinding].
///
/// See the documentation for Mockito's code generation for more information.
class MockWidgetsBinding extends _i1.Mock implements _i15.WidgetsBinding {
  @override
  _i15.PlatformMenuDelegate get platformMenuDelegate => (super.noSuchMethod(
        Invocation.getter(#platformMenuDelegate),
        returnValue: _FakePlatformMenuDelegate_35(
          this,
          Invocation.getter(#platformMenuDelegate),
        ),
        returnValueForMissingStub: _FakePlatformMenuDelegate_35(
          this,
          Invocation.getter(#platformMenuDelegate),
        ),
      ) as _i15.PlatformMenuDelegate);
  @override
  set platformMenuDelegate(_i15.PlatformMenuDelegate? _platformMenuDelegate) =>
      super.noSuchMethod(
        Invocation.setter(
          #platformMenuDelegate,
          _platformMenuDelegate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get debugBuildingDirtyElements => (super.noSuchMethod(
        Invocation.getter(#debugBuildingDirtyElements),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set debugBuildingDirtyElements(bool? _debugBuildingDirtyElements) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugBuildingDirtyElements,
          _debugBuildingDirtyElements,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i15.FocusManager get focusManager => (super.noSuchMethod(
        Invocation.getter(#focusManager),
        returnValue: _FakeFocusManager_36(
          this,
          Invocation.getter(#focusManager),
        ),
        returnValueForMissingStub: _FakeFocusManager_36(
          this,
          Invocation.getter(#focusManager),
        ),
      ) as _i15.FocusManager);
  @override
  bool get firstFrameRasterized => (super.noSuchMethod(
        Invocation.getter(#firstFrameRasterized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i30.Future<void> get waitUntilFirstFrameRasterized => (super.noSuchMethod(
        Invocation.getter(#waitUntilFirstFrameRasterized),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  bool get debugDidSendFirstFrameEvent => (super.noSuchMethod(
        Invocation.getter(#debugDidSendFirstFrameEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get framesEnabled => (super.noSuchMethod(
        Invocation.getter(#framesEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isRootWidgetAttached => (super.noSuchMethod(
        Invocation.getter(#isRootWidgetAttached),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i14.SingletonFlutterWindow get window => (super.noSuchMethod(
        Invocation.getter(#window),
        returnValue: _FakeSingletonFlutterWindow_37(
          this,
          Invocation.getter(#window),
        ),
        returnValueForMissingStub: _FakeSingletonFlutterWindow_37(
          this,
          Invocation.getter(#window),
        ),
      ) as _i14.SingletonFlutterWindow);
  @override
  _i14.PlatformDispatcher get platformDispatcher => (super.noSuchMethod(
        Invocation.getter(#platformDispatcher),
        returnValue: _FakePlatformDispatcher_30(
          this,
          Invocation.getter(#platformDispatcher),
        ),
        returnValueForMissingStub: _FakePlatformDispatcher_30(
          this,
          Invocation.getter(#platformDispatcher),
        ),
      ) as _i14.PlatformDispatcher);
  @override
  bool get locked => (super.noSuchMethod(
        Invocation.getter(#locked),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i16.HardwareKeyboard get keyboard => (super.noSuchMethod(
        Invocation.getter(#keyboard),
        returnValue: _FakeHardwareKeyboard_38(
          this,
          Invocation.getter(#keyboard),
        ),
        returnValueForMissingStub: _FakeHardwareKeyboard_38(
          this,
          Invocation.getter(#keyboard),
        ),
      ) as _i16.HardwareKeyboard);
  @override
  _i16.KeyEventManager get keyEventManager => (super.noSuchMethod(
        Invocation.getter(#keyEventManager),
        returnValue: _FakeKeyEventManager_39(
          this,
          Invocation.getter(#keyEventManager),
        ),
        returnValueForMissingStub: _FakeKeyEventManager_39(
          this,
          Invocation.getter(#keyEventManager),
        ),
      ) as _i16.KeyEventManager);
  @override
  _i16.BinaryMessenger get defaultBinaryMessenger => (super.noSuchMethod(
        Invocation.getter(#defaultBinaryMessenger),
        returnValue: _FakeBinaryMessenger_40(
          this,
          Invocation.getter(#defaultBinaryMessenger),
        ),
        returnValueForMissingStub: _FakeBinaryMessenger_40(
          this,
          Invocation.getter(#defaultBinaryMessenger),
        ),
      ) as _i16.BinaryMessenger);
  @override
  _i14.ChannelBuffers get channelBuffers => (super.noSuchMethod(
        Invocation.getter(#channelBuffers),
        returnValue: _FakeChannelBuffers_41(
          this,
          Invocation.getter(#channelBuffers),
        ),
        returnValueForMissingStub: _FakeChannelBuffers_41(
          this,
          Invocation.getter(#channelBuffers),
        ),
      ) as _i14.ChannelBuffers);
  @override
  _i16.RestorationManager get restorationManager => (super.noSuchMethod(
        Invocation.getter(#restorationManager),
        returnValue: _FakeRestorationManager_42(
          this,
          Invocation.getter(#restorationManager),
        ),
        returnValueForMissingStub: _FakeRestorationManager_42(
          this,
          Invocation.getter(#restorationManager),
        ),
      ) as _i16.RestorationManager);
  @override
  _i38.SchedulingStrategy get schedulingStrategy => (super.noSuchMethod(
        Invocation.getter(#schedulingStrategy),
        returnValue: ({
          required int priority,
          required _i38.SchedulerBinding scheduler,
        }) =>
            false,
        returnValueForMissingStub: ({
          required int priority,
          required _i38.SchedulerBinding scheduler,
        }) =>
            false,
      ) as _i38.SchedulingStrategy);
  @override
  set schedulingStrategy(_i38.SchedulingStrategy? _schedulingStrategy) =>
      super.noSuchMethod(
        Invocation.setter(
          #schedulingStrategy,
          _schedulingStrategy,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get transientCallbackCount => (super.noSuchMethod(
        Invocation.getter(#transientCallbackCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i30.Future<void> get endOfFrame => (super.noSuchMethod(
        Invocation.getter(#endOfFrame),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  bool get hasScheduledFrame => (super.noSuchMethod(
        Invocation.getter(#hasScheduledFrame),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i38.SchedulerPhase get schedulerPhase => (super.noSuchMethod(
        Invocation.getter(#schedulerPhase),
        returnValue: _i38.SchedulerPhase.idle,
        returnValueForMissingStub: _i38.SchedulerPhase.idle,
      ) as _i38.SchedulerPhase);
  @override
  Duration get currentFrameTimeStamp => (super.noSuchMethod(
        Invocation.getter(#currentFrameTimeStamp),
        returnValue: _FakeDuration_24(
          this,
          Invocation.getter(#currentFrameTimeStamp),
        ),
        returnValueForMissingStub: _FakeDuration_24(
          this,
          Invocation.getter(#currentFrameTimeStamp),
        ),
      ) as Duration);
  @override
  Duration get currentSystemFrameTimeStamp => (super.noSuchMethod(
        Invocation.getter(#currentSystemFrameTimeStamp),
        returnValue: _FakeDuration_24(
          this,
          Invocation.getter(#currentSystemFrameTimeStamp),
        ),
        returnValueForMissingStub: _FakeDuration_24(
          this,
          Invocation.getter(#currentSystemFrameTimeStamp),
        ),
      ) as Duration);
  @override
  _i17.PointerRouter get pointerRouter => (super.noSuchMethod(
        Invocation.getter(#pointerRouter),
        returnValue: _FakePointerRouter_43(
          this,
          Invocation.getter(#pointerRouter),
        ),
        returnValueForMissingStub: _FakePointerRouter_43(
          this,
          Invocation.getter(#pointerRouter),
        ),
      ) as _i17.PointerRouter);
  @override
  _i17.GestureArenaManager get gestureArena => (super.noSuchMethod(
        Invocation.getter(#gestureArena),
        returnValue: _FakeGestureArenaManager_44(
          this,
          Invocation.getter(#gestureArena),
        ),
        returnValueForMissingStub: _FakeGestureArenaManager_44(
          this,
          Invocation.getter(#gestureArena),
        ),
      ) as _i17.GestureArenaManager);
  @override
  _i17.PointerSignalResolver get pointerSignalResolver => (super.noSuchMethod(
        Invocation.getter(#pointerSignalResolver),
        returnValue: _FakePointerSignalResolver_45(
          this,
          Invocation.getter(#pointerSignalResolver),
        ),
        returnValueForMissingStub: _FakePointerSignalResolver_45(
          this,
          Invocation.getter(#pointerSignalResolver),
        ),
      ) as _i17.PointerSignalResolver);
  @override
  bool get resamplingEnabled => (super.noSuchMethod(
        Invocation.getter(#resamplingEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set resamplingEnabled(bool? _resamplingEnabled) => super.noSuchMethod(
        Invocation.setter(
          #resamplingEnabled,
          _resamplingEnabled,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Duration get samplingOffset => (super.noSuchMethod(
        Invocation.getter(#samplingOffset),
        returnValue: _FakeDuration_24(
          this,
          Invocation.getter(#samplingOffset),
        ),
        returnValueForMissingStub: _FakeDuration_24(
          this,
          Invocation.getter(#samplingOffset),
        ),
      ) as Duration);
  @override
  set samplingOffset(Duration? _samplingOffset) => super.noSuchMethod(
        Invocation.setter(
          #samplingOffset,
          _samplingOffset,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.MouseTracker get mouseTracker => (super.noSuchMethod(
        Invocation.getter(#mouseTracker),
        returnValue: _FakeMouseTracker_46(
          this,
          Invocation.getter(#mouseTracker),
        ),
        returnValueForMissingStub: _FakeMouseTracker_46(
          this,
          Invocation.getter(#mouseTracker),
        ),
      ) as _i18.MouseTracker);
  @override
  _i18.PipelineOwner get pipelineOwner => (super.noSuchMethod(
        Invocation.getter(#pipelineOwner),
        returnValue: _FakePipelineOwner_47(
          this,
          Invocation.getter(#pipelineOwner),
        ),
        returnValueForMissingStub: _FakePipelineOwner_47(
          this,
          Invocation.getter(#pipelineOwner),
        ),
      ) as _i18.PipelineOwner);
  @override
  _i18.RenderView get renderView => (super.noSuchMethod(
        Invocation.getter(#renderView),
        returnValue: _FakeRenderView_48(
          this,
          Invocation.getter(#renderView),
        ),
        returnValueForMissingStub: _FakeRenderView_48(
          this,
          Invocation.getter(#renderView),
        ),
      ) as _i18.RenderView);
  @override
  set renderView(_i18.RenderView? value) => super.noSuchMethod(
        Invocation.setter(
          #renderView,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get sendFramesToEngine => (super.noSuchMethod(
        Invocation.getter(#sendFramesToEngine),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i14.AccessibilityFeatures get accessibilityFeatures => (super.noSuchMethod(
        Invocation.getter(#accessibilityFeatures),
        returnValue: _FakeAccessibilityFeatures_29(
          this,
          Invocation.getter(#accessibilityFeatures),
        ),
        returnValueForMissingStub: _FakeAccessibilityFeatures_29(
          this,
          Invocation.getter(#accessibilityFeatures),
        ),
      ) as _i14.AccessibilityFeatures);
  @override
  bool get disableAnimations => (super.noSuchMethod(
        Invocation.getter(#disableAnimations),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void initInstances() => super.noSuchMethod(
        Invocation.method(
          #initInstances,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initServiceExtensions() => super.noSuchMethod(
        Invocation.method(
          #initServiceExtensions,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addObserver(_i15.WidgetsBindingObserver? observer) => super.noSuchMethod(
        Invocation.method(
          #addObserver,
          [observer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool removeObserver(_i15.WidgetsBindingObserver? observer) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeObserver,
          [observer],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void handleMetricsChanged() => super.noSuchMethod(
        Invocation.method(
          #handleMetricsChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleTextScaleFactorChanged() => super.noSuchMethod(
        Invocation.method(
          #handleTextScaleFactorChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handlePlatformBrightnessChanged() => super.noSuchMethod(
        Invocation.method(
          #handlePlatformBrightnessChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleAccessibilityFeaturesChanged() => super.noSuchMethod(
        Invocation.method(
          #handleAccessibilityFeaturesChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleLocaleChanged() => super.noSuchMethod(
        Invocation.method(
          #handleLocaleChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispatchLocalesChanged(List<_i14.Locale>? locales) => super.noSuchMethod(
        Invocation.method(
          #dispatchLocalesChanged,
          [locales],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispatchAccessibilityFeaturesChanged() => super.noSuchMethod(
        Invocation.method(
          #dispatchAccessibilityFeaturesChanged,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> handlePopRoute() => (super.noSuchMethod(
        Invocation.method(
          #handlePopRoute,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i30.Future<void> handlePushRoute(String? route) => (super.noSuchMethod(
        Invocation.method(
          #handlePushRoute,
          [route],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void handleAppLifecycleStateChanged(_i14.AppLifecycleState? state) =>
      super.noSuchMethod(
        Invocation.method(
          #handleAppLifecycleStateChanged,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleMemoryPressure() => super.noSuchMethod(
        Invocation.method(
          #handleMemoryPressure,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void drawFrame() => super.noSuchMethod(
        Invocation.method(
          #drawFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void scheduleAttachRootWidget(_i15.Widget? rootWidget) => super.noSuchMethod(
        Invocation.method(
          #scheduleAttachRootWidget,
          [rootWidget],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void attachRootWidget(_i15.Widget? rootWidget) => super.noSuchMethod(
        Invocation.method(
          #attachRootWidget,
          [rootWidget],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> performReassemble() => (super.noSuchMethod(
        Invocation.method(
          #performReassemble,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  _i14.Locale? computePlatformResolvedLocale(
          List<_i14.Locale>? supportedLocales) =>
      (super.noSuchMethod(
        Invocation.method(
          #computePlatformResolvedLocale,
          [supportedLocales],
        ),
        returnValueForMissingStub: null,
      ) as _i14.Locale?);
  @override
  _i30.Future<void> lockEvents(_i30.Future<void> Function()? callback) =>
      (super.noSuchMethod(
        Invocation.method(
          #lockEvents,
          [callback],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void unlocked() => super.noSuchMethod(
        Invocation.method(
          #unlocked,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> reassembleApplication() => (super.noSuchMethod(
        Invocation.method(
          #reassembleApplication,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void registerSignalServiceExtension({
    required String? name,
    required _i39.AsyncCallback? callback,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerSignalServiceExtension,
          [],
          {
            #name: name,
            #callback: callback,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerBoolServiceExtension({
    required String? name,
    required _i39.AsyncValueGetter<bool>? getter,
    required _i39.AsyncValueSetter<bool>? setter,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerBoolServiceExtension,
          [],
          {
            #name: name,
            #getter: getter,
            #setter: setter,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerNumericServiceExtension({
    required String? name,
    required _i39.AsyncValueGetter<double>? getter,
    required _i39.AsyncValueSetter<double>? setter,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerNumericServiceExtension,
          [],
          {
            #name: name,
            #getter: getter,
            #setter: setter,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void postEvent(
    String? eventKind,
    Map<String, dynamic>? eventData,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #postEvent,
          [
            eventKind,
            eventData,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerStringServiceExtension({
    required String? name,
    required _i39.AsyncValueGetter<String>? getter,
    required _i39.AsyncValueSetter<String>? setter,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerStringServiceExtension,
          [],
          {
            #name: name,
            #getter: getter,
            #setter: setter,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerServiceExtension({
    required String? name,
    required _i39.ServiceExtensionCallback? callback,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerServiceExtension,
          [],
          {
            #name: name,
            #callback: callback,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i16.BinaryMessenger createBinaryMessenger() => (super.noSuchMethod(
        Invocation.method(
          #createBinaryMessenger,
          [],
        ),
        returnValue: _FakeBinaryMessenger_40(
          this,
          Invocation.method(
            #createBinaryMessenger,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeBinaryMessenger_40(
          this,
          Invocation.method(
            #createBinaryMessenger,
            [],
          ),
        ),
      ) as _i16.BinaryMessenger);
  @override
  _i30.Future<void> handleSystemMessage(Object? systemMessage) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleSystemMessage,
          [systemMessage],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void initLicenses() => super.noSuchMethod(
        Invocation.method(
          #initLicenses,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void evict(String? asset) => super.noSuchMethod(
        Invocation.method(
          #evict,
          [asset],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void readInitialLifecycleStateFromNativeWindow() => super.noSuchMethod(
        Invocation.method(
          #readInitialLifecycleStateFromNativeWindow,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i16.RestorationManager createRestorationManager() => (super.noSuchMethod(
        Invocation.method(
          #createRestorationManager,
          [],
        ),
        returnValue: _FakeRestorationManager_42(
          this,
          Invocation.method(
            #createRestorationManager,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeRestorationManager_42(
          this,
          Invocation.method(
            #createRestorationManager,
            [],
          ),
        ),
      ) as _i16.RestorationManager);
  @override
  void setSystemUiChangeCallback(_i16.SystemUiChangeCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setSystemUiChangeCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addTimingsCallback(_i14.TimingsCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #addTimingsCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeTimingsCallback(_i14.TimingsCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #removeTimingsCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<T> scheduleTask<T>(
    _i38.TaskCallback<T>? task,
    _i38.Priority? priority, {
    String? debugLabel,
    _i40.Flow? flow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleTask,
          [
            task,
            priority,
          ],
          {
            #debugLabel: debugLabel,
            #flow: flow,
          },
        ),
        returnValue: _i30.Future<T>.value(null),
        returnValueForMissingStub: _i30.Future<T>.value(null),
      ) as _i30.Future<T>);
  @override
  bool handleEventLoopCallback() => (super.noSuchMethod(
        Invocation.method(
          #handleEventLoopCallback,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  int scheduleFrameCallback(
    _i38.FrameCallback? callback, {
    bool? rescheduling = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scheduleFrameCallback,
          [callback],
          {#rescheduling: rescheduling},
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  void cancelFrameCallbackWithId(int? id) => super.noSuchMethod(
        Invocation.method(
          #cancelFrameCallbackWithId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool debugAssertNoTransientCallbacks(String? reason) => (super.noSuchMethod(
        Invocation.method(
          #debugAssertNoTransientCallbacks,
          [reason],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool debugAssertNoPendingPerformanceModeRequests(String? reason) =>
      (super.noSuchMethod(
        Invocation.method(
          #debugAssertNoPendingPerformanceModeRequests,
          [reason],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool debugAssertNoTimeDilation(String? reason) => (super.noSuchMethod(
        Invocation.method(
          #debugAssertNoTimeDilation,
          [reason],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void addPersistentFrameCallback(_i38.FrameCallback? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #addPersistentFrameCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addPostFrameCallback(_i38.FrameCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #addPostFrameCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void ensureFrameCallbacksRegistered() => super.noSuchMethod(
        Invocation.method(
          #ensureFrameCallbacksRegistered,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void ensureVisualUpdate() => super.noSuchMethod(
        Invocation.method(
          #ensureVisualUpdate,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void scheduleFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void scheduleForcedFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleForcedFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void scheduleWarmUpFrame() => super.noSuchMethod(
        Invocation.method(
          #scheduleWarmUpFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetEpoch() => super.noSuchMethod(
        Invocation.method(
          #resetEpoch,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleBeginFrame(Duration? rawTimeStamp) => super.noSuchMethod(
        Invocation.method(
          #handleBeginFrame,
          [rawTimeStamp],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i38.PerformanceModeRequestHandle? requestPerformanceMode(
          _i14.DartPerformanceMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPerformanceMode,
          [mode],
        ),
        returnValueForMissingStub: null,
      ) as _i38.PerformanceModeRequestHandle?);
  @override
  void handleDrawFrame() => super.noSuchMethod(
        Invocation.method(
          #handleDrawFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void cancelPointer(int? pointer) => super.noSuchMethod(
        Invocation.method(
          #cancelPointer,
          [pointer],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handlePointerEvent(_i15.PointerEvent? event) => super.noSuchMethod(
        Invocation.method(
          #handlePointerEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void hitTest(
    _i17.HitTestResult? result,
    _i14.Offset? position,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #hitTest,
          [
            result,
            position,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispatchEvent(
    _i15.PointerEvent? event,
    _i17.HitTestResult? hitTestResult,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #dispatchEvent,
          [
            event,
            hitTestResult,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void handleEvent(
    _i15.PointerEvent? event,
    _i17.HitTestEntry<_i17.HitTestTarget>? entry,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #handleEvent,
          [
            event,
            entry,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetGestureBinding() => super.noSuchMethod(
        Invocation.method(
          #resetGestureBinding,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initRenderView() => super.noSuchMethod(
        Invocation.method(
          #initRenderView,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.ViewConfiguration createViewConfiguration() => (super.noSuchMethod(
        Invocation.method(
          #createViewConfiguration,
          [],
        ),
        returnValue: _FakeViewConfiguration_49(
          this,
          Invocation.method(
            #createViewConfiguration,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeViewConfiguration_49(
          this,
          Invocation.method(
            #createViewConfiguration,
            [],
          ),
        ),
      ) as _i18.ViewConfiguration);
  @override
  void initMouseTracker([_i18.MouseTracker? tracker]) => super.noSuchMethod(
        Invocation.method(
          #initMouseTracker,
          [tracker],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setSemanticsEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setSemanticsEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void deferFirstFrame() => super.noSuchMethod(
        Invocation.method(
          #deferFirstFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void allowFirstFrame() => super.noSuchMethod(
        Invocation.method(
          #allowFirstFrame,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetFirstFrameSent() => super.noSuchMethod(
        Invocation.method(
          #resetFirstFrameSent,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.SemanticsUpdateBuilder createSemanticsUpdateBuilder() =>
      (super.noSuchMethod(
        Invocation.method(
          #createSemanticsUpdateBuilder,
          [],
        ),
        returnValue: _FakeSemanticsUpdateBuilder_50(
          this,
          Invocation.method(
            #createSemanticsUpdateBuilder,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeSemanticsUpdateBuilder_50(
          this,
          Invocation.method(
            #createSemanticsUpdateBuilder,
            [],
          ),
        ),
      ) as _i14.SemanticsUpdateBuilder);
}

/// A class which mocks [FileBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileBloc extends _i1.Mock implements _i19.FileBloc {
  @override
  _i19.FileState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeFileState_51(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeFileState_51(
          this,
          Invocation.getter(#state),
        ),
      ) as _i19.FileState);
  @override
  _i30.Stream<_i19.FileState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i19.FileState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i19.FileState>.empty(),
      ) as _i30.Stream<_i19.FileState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void add(_i19.FileEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i19.FileEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i19.FileState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i19.FileEvent>(
    _i41.EventHandler<E, _i19.FileState>? handler, {
    _i41.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(
          _i41.Transition<_i19.FileEvent, _i19.FileState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void onChange(_i41.Change<_i19.FileState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LanguageBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageBloc extends _i1.Mock implements _i20.LanguageBloc {
  @override
  _i20.LanguageState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeLanguageState_52(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeLanguageState_52(
          this,
          Invocation.getter(#state),
        ),
      ) as _i20.LanguageState);
  @override
  _i30.Stream<_i20.LanguageState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i20.LanguageState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i20.LanguageState>.empty(),
      ) as _i30.Stream<_i20.LanguageState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void add(_i20.LanguageEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i20.LanguageEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i20.LanguageState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i20.LanguageEvent>(
    _i41.EventHandler<E, _i20.LanguageState>? handler, {
    _i41.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(
          _i41.Transition<_i20.LanguageEvent, _i20.LanguageState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void onChange(_i41.Change<_i20.LanguageState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SignInBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignInBloc extends _i1.Mock implements _i21.SignInBloc {
  @override
  _i21.SignInState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSignInState_53(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeSignInState_53(
          this,
          Invocation.getter(#state),
        ),
      ) as _i21.SignInState);
  @override
  _i30.Stream<_i21.SignInState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i21.SignInState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i21.SignInState>.empty(),
      ) as _i30.Stream<_i21.SignInState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void add(_i21.SignInEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i21.SignInEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i21.SignInState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i21.SignInEvent>(
    _i41.EventHandler<E, _i21.SignInState>? handler, {
    _i41.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(
          _i41.Transition<_i21.SignInEvent, _i21.SignInState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void onChange(_i41.Change<_i21.SignInState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SignUpBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignUpBloc extends _i1.Mock implements _i23.SignUpBloc {
  @override
  _i22.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_54(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_54(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i22.AuthRepository);
  @override
  _i23.SignUpState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSignUpState_55(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeSignUpState_55(
          this,
          Invocation.getter(#state),
        ),
      ) as _i23.SignUpState);
  @override
  _i30.Stream<_i23.SignUpState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i23.SignUpState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i23.SignUpState>.empty(),
      ) as _i30.Stream<_i23.SignUpState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void add(_i23.SignUpEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i23.SignUpEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i23.SignUpState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i23.SignUpEvent>(
    _i41.EventHandler<E, _i23.SignUpState>? handler, {
    _i41.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(
          _i41.Transition<_i23.SignUpEvent, _i23.SignUpState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void onChange(_i41.Change<_i23.SignUpState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SignUpFormBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignUpFormBloc extends _i1.Mock implements _i24.SignUpFormBloc {
  @override
  _i24.SignUpFormState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSignUpFormState_56(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeSignUpFormState_56(
          this,
          Invocation.getter(#state),
        ),
      ) as _i24.SignUpFormState);
  @override
  _i30.Stream<_i24.SignUpFormState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i24.SignUpFormState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i24.SignUpFormState>.empty(),
      ) as _i30.Stream<_i24.SignUpFormState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void add(_i24.SignUpFormEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i24.SignUpFormEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i24.SignUpFormState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i24.SignUpFormEvent>(
    _i41.EventHandler<E, _i24.SignUpFormState>? handler, {
    _i41.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(
          _i41.Transition<_i24.SignUpFormEvent, _i24.SignUpFormState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
  @override
  void onChange(_i41.Change<_i24.SignUpFormState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AccountCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountCubit extends _i1.Mock implements _i25.AccountCubit {
  @override
  _i22.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_54(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_54(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i22.AuthRepository);
  @override
  _i25.AccountState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAccountState_57(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAccountState_57(
          this,
          Invocation.getter(#state),
        ),
      ) as _i25.AccountState);
  @override
  _i30.Stream<_i25.AccountState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i25.AccountState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i25.AccountState>.empty(),
      ) as _i30.Stream<_i25.AccountState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void getAccountData() => super.noSuchMethod(
        Invocation.method(
          #getAccountData,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i25.AccountState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i41.Change<_i25.AccountState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [RouteCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockRouteCubit extends _i1.Mock implements _i26.RouteCubit {
  @override
  _i22.AuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeAuthRepository_54(
          this,
          Invocation.getter(#authRepository),
        ),
        returnValueForMissingStub: _FakeAuthRepository_54(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i22.AuthRepository);
  @override
  _i22.UserRepository get userRepository => (super.noSuchMethod(
        Invocation.getter(#userRepository),
        returnValue: _FakeUserRepository_58(
          this,
          Invocation.getter(#userRepository),
        ),
        returnValueForMissingStub: _FakeUserRepository_58(
          this,
          Invocation.getter(#userRepository),
        ),
      ) as _i22.UserRepository);
  @override
  _i26.RouteState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeRouteState_59(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeRouteState_59(
          this,
          Invocation.getter(#state),
        ),
      ) as _i26.RouteState);
  @override
  _i30.Stream<_i26.RouteState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i26.RouteState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i26.RouteState>.empty(),
      ) as _i30.Stream<_i26.RouteState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void getTargetRoute() => super.noSuchMethod(
        Invocation.method(
          #getTargetRoute,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i26.RouteState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i41.Change<_i26.RouteState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}

/// A class which mocks [SignOutCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignOutCubit extends _i1.Mock implements _i27.SignOutCubit {
  @override
  _i27.SignOutState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSignOutState_60(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeSignOutState_60(
          this,
          Invocation.getter(#state),
        ),
      ) as _i27.SignOutState);
  @override
  _i30.Stream<_i27.SignOutState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i30.Stream<_i27.SignOutState>.empty(),
        returnValueForMissingStub: _i30.Stream<_i27.SignOutState>.empty(),
      ) as _i30.Stream<_i27.SignOutState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void signOut() => super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i27.SignOutState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i41.Change<_i27.SignOutState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i30.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i30.Future<void>.value(),
        returnValueForMissingStub: _i30.Future<void>.value(),
      ) as _i30.Future<void>);
}
