// Mocks generated by Mockito 5.3.2 from annotations
// in soca/test/mock/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i4;
import 'package:firebase_core/firebase_core.dart' as _i3;
import 'package:flutter/material.dart' as _i11;
import 'package:flutter_bloc/flutter_bloc.dart' as _i20;
import 'package:flutter_dotenv/src/dotenv.dart' as _i17;
import 'package:flutter_dotenv/src/parser.dart' as _i18;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:google_sign_in/google_sign_in.dart' as _i6;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i19;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:onesignal_flutter/onesignal_flutter.dart' as _i8;
import 'package:soca/config/route/app_navigator.dart' as _i10;
import 'package:soca/core/core.dart' as _i12;
import 'package:soca/data/data.dart' as _i16;
import 'package:soca/data/providers/functions_provider.dart' as _i15;
import 'package:soca/data/providers/providers.dart' as _i13;
import 'package:soca/logic/bloc/language/language_bloc.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIOSOptions_0 extends _i1.SmartFake implements _i2.IOSOptions {
  _FakeIOSOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_1 extends _i1.SmartFake
    implements _i2.AndroidOptions {
  _FakeAndroidOptions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_2 extends _i1.SmartFake implements _i2.LinuxOptions {
  _FakeLinuxOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_3 extends _i1.SmartFake
    implements _i2.WindowsOptions {
  _FakeWindowsOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_4 extends _i1.SmartFake implements _i2.WebOptions {
  _FakeWebOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_5 extends _i1.SmartFake implements _i2.MacOsOptions {
  _FakeMacOsOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_6 extends _i1.SmartFake implements _i3.FirebaseApp {
  _FakeFirebaseApp_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeActionCodeInfo_7 extends _i1.SmartFake
    implements _i4.ActionCodeInfo {
  _FakeActionCodeInfo_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserCredential_8 extends _i1.SmartFake
    implements _i5.UserCredential {
  _FakeUserCredential_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfirmationResult_9 extends _i1.SmartFake
    implements _i5.ConfirmationResult {
  _FakeConfirmationResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignInAuthentication_10 extends _i1.SmartFake
    implements _i6.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserMetadata_11 extends _i1.SmartFake implements _i4.UserMetadata {
  _FakeUserMetadata_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiFactor_12 extends _i1.SmartFake implements _i5.MultiFactor {
  _FakeMultiFactor_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIdTokenResult_13 extends _i1.SmartFake implements _i4.IdTokenResult {
  _FakeIdTokenResult_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_14 extends _i1.SmartFake implements _i5.User {
  _FakeUser_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_15 extends _i1.SmartFake implements Duration {
  _FakeDuration_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddressCheckResult_16 extends _i1.SmartFake
    implements _i7.AddressCheckResult {
  _FakeAddressCheckResult_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOSOutcomeEvent_17 extends _i1.SmartFake
    implements _i8.OSOutcomeEvent {
  _FakeOSOutcomeEvent_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLanguageState_18 extends _i1.SmartFake implements _i9.LanguageState {
  _FakeLanguageState_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppNavigator].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppNavigator extends _i1.Mock implements _i10.AppNavigator {
  @override
  void back<T>(
    _i11.BuildContext? context, {
    T? result,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #back,
          [context],
          {#result: result},
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool canPop(_i11.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [context],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [PlatformInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformInfo extends _i1.Mock implements _i12.PlatformInfo {
  @override
  bool isIOS() => (super.noSuchMethod(
        Invocation.method(
          #isIOS,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool isAndroid() => (super.noSuchMethod(
        Invocation.method(
          #isAndroid,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i13.AuthProvider {
  @override
  _i14.Future<bool?> isSignInOnProcess() => (super.noSuchMethod(
        Invocation.method(
          #isSignInOnProcess,
          [],
        ),
        returnValue: _i14.Future<bool?>.value(),
        returnValueForMissingStub: _i14.Future<bool?>.value(),
      ) as _i14.Future<bool?>);
  @override
  _i14.Future<void> setIsSignInOnProcess(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setIsSignInOnProcess,
          [value],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setSignInMethod(_i12.AuthMethod? authMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSignInMethod,
          [authMethod],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i12.AuthMethod?> getSignInMethod() => (super.noSuchMethod(
        Invocation.method(
          #getSignInMethod,
          [],
        ),
        returnValue: _i14.Future<_i12.AuthMethod?>.value(),
        returnValueForMissingStub: _i14.Future<_i12.AuthMethod?>.value(),
      ) as _i14.Future<_i12.AuthMethod?>);
  @override
  _i14.Future<void> notifyIsSignInSuccessfully({
    required String? deviceID,
    required String? oneSignalPlayerID,
    required String? voipToken,
    required _i12.DevicePlatform? devicePlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyIsSignInSuccessfully,
          [],
          {
            #deviceID: deviceID,
            #oneSignalPlayerID: oneSignalPlayerID,
            #voipToken: voipToken,
            #devicePlatform: devicePlatform,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [DeviceProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceProvider extends _i1.Mock implements _i13.DeviceProvider {
  @override
  String get deviceIDKey => (super.noSuchMethod(
        Invocation.getter(#deviceIDKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i14.Future<String> getDeviceID() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceID,
          [],
        ),
        returnValue: _i14.Future<String>.value(''),
        returnValueForMissingStub: _i14.Future<String>.value(''),
      ) as _i14.Future<String>);
  @override
  _i14.Future<String?> getOnesignalPlayerID() => (super.noSuchMethod(
        Invocation.method(
          #getOnesignalPlayerID,
          [],
        ),
        returnValue: _i14.Future<String?>.value(),
        returnValueForMissingStub: _i14.Future<String?>.value(),
      ) as _i14.Future<String?>);
  @override
  _i14.Future<String?> getVoIP() => (super.noSuchMethod(
        Invocation.method(
          #getVoIP,
          [],
        ),
        returnValue: _i14.Future<String?>.value(),
        returnValueForMissingStub: _i14.Future<String?>.value(),
      ) as _i14.Future<String?>);
}

/// A class which mocks [FunctionsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFunctionsProvider extends _i1.Mock implements _i15.FunctionsProvider {
  @override
  _i14.Future<dynamic> call({
    required String? functionsName,
    dynamic parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #functionsName: functionsName,
            #parameters: parameters,
          },
        ),
        returnValue: _i14.Future<dynamic>.value(),
        returnValueForMissingStub: _i14.Future<dynamic>.value(),
      ) as _i14.Future<dynamic>);
}

/// A class which mocks [LocalLanguageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalLanguageProvider extends _i1.Mock
    implements _i13.LocalLanguageProvider {
  @override
  String get lastChangedKey => (super.noSuchMethod(
        Invocation.getter(#lastChangedKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get lastChangedOnesignalKey => (super.noSuchMethod(
        Invocation.getter(#lastChangedOnesignalKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i14.Future<String?> getLastChanged() => (super.noSuchMethod(
        Invocation.method(
          #getLastChanged,
          [],
        ),
        returnValue: _i14.Future<String?>.value(),
        returnValueForMissingStub: _i14.Future<String?>.value(),
      ) as _i14.Future<String?>);
  @override
  _i14.Future<String?> getLastChangedOnesignal() => (super.noSuchMethod(
        Invocation.method(
          #getLastChangedOnesignal,
          [],
        ),
        returnValue: _i14.Future<String?>.value(),
        returnValueForMissingStub: _i14.Future<String?>.value(),
      ) as _i14.Future<String?>);
  @override
  _i14.Future<void> updateLastChanged(String? language) => (super.noSuchMethod(
        Invocation.method(
          #updateLastChanged,
          [language],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> updateLastChangedOnesignal(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastChangedOnesignal,
          [language],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [LanguageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageRepository extends _i1.Mock
    implements _i16.LanguageRepository {
  @override
  _i14.Future<_i12.DeviceLanguage?> getLastChanged() => (super.noSuchMethod(
        Invocation.method(
          #getLastChanged,
          [],
        ),
        returnValue: _i14.Future<_i12.DeviceLanguage?>.value(),
        returnValueForMissingStub: _i14.Future<_i12.DeviceLanguage?>.value(),
      ) as _i14.Future<_i12.DeviceLanguage?>);
  @override
  _i14.Future<_i12.DeviceLanguage?> getLastChangedOnesignal() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastChangedOnesignal,
          [],
        ),
        returnValue: _i14.Future<_i12.DeviceLanguage?>.value(),
        returnValueForMissingStub: _i14.Future<_i12.DeviceLanguage?>.value(),
      ) as _i14.Future<_i12.DeviceLanguage?>);
  @override
  _i14.Future<void> updateLastChanged(_i12.DeviceLanguage? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastChanged,
          [language],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> updateLastChangedOnesignal(_i12.DeviceLanguage? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastChangedOnesignal,
          [language],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [DotEnv].
///
/// See the documentation for Mockito's code generation for more information.
class MockDotEnv extends _i1.Mock implements _i17.DotEnv {
  @override
  Map<String, String> get env => (super.noSuchMethod(
        Invocation.getter(#env),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void clean() => super.noSuchMethod(
        Invocation.method(
          #clean,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get(
    String? name, {
    String? fallback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [name],
          {#fallback: fallback},
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String? maybeGet(
    String? name, {
    String? fallback,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #maybeGet,
          [name],
          {#fallback: fallback},
        ),
        returnValueForMissingStub: null,
      ) as String?);
  @override
  _i14.Future<void> load({
    String? fileName = r'.env',
    _i18.Parser? parser = const _i18.Parser(),
    Map<String, String>? mergeWith = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
          {
            #fileName: fileName,
            #parser: parser,
            #mergeWith: mergeWith,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  void testLoad({
    String? fileInput = r'',
    _i18.Parser? parser = const _i18.Parser(),
    Map<String, String>? mergeWith = const {},
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #testLoad,
          [],
          {
            #fileInput: fileInput,
            #parser: parser,
            #mergeWith: mergeWith,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isEveryDefined(Iterable<String>? vars) => (super.noSuchMethod(
        Invocation.method(
          #isEveryDefined,
          [vars],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i2.FlutterSecureStorage {
  @override
  _i2.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_0(
          this,
          Invocation.getter(#iOptions),
        ),
        returnValueForMissingStub: _FakeIOSOptions_0(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i2.IOSOptions);
  @override
  _i2.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_1(
          this,
          Invocation.getter(#aOptions),
        ),
        returnValueForMissingStub: _FakeAndroidOptions_1(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i2.AndroidOptions);
  @override
  _i2.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_2(
          this,
          Invocation.getter(#lOptions),
        ),
        returnValueForMissingStub: _FakeLinuxOptions_2(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i2.LinuxOptions);
  @override
  _i2.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_3(
          this,
          Invocation.getter(#wOptions),
        ),
        returnValueForMissingStub: _FakeWindowsOptions_3(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i2.WindowsOptions);
  @override
  _i2.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_4(
          this,
          Invocation.getter(#webOptions),
        ),
        returnValueForMissingStub: _FakeWebOptions_4(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i2.WebOptions);
  @override
  _i2.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_5(
          this,
          Invocation.getter(#mOptions),
        ),
        returnValueForMissingStub: _FakeMacOsOptions_5(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i2.MacOsOptions);
  @override
  _i14.Future<void> write({
    required String? key,
    required String? value,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<String?> read({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i14.Future<String?>.value(),
        returnValueForMissingStub: _i14.Future<String?>.value(),
      ) as _i14.Future<String?>);
  @override
  _i14.Future<bool> containsKey({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i14.Future<bool>.value(false),
        returnValueForMissingStub: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
  @override
  _i14.Future<void> delete({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<Map<String, String>> readAll({
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i14.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i14.Future<Map<String, String>>);
  @override
  _i14.Future<void> deleteAll({
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  @override
  _i3.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_6(
          this,
          Invocation.getter(#app),
        ),
        returnValueForMissingStub: _FakeFirebaseApp_6(
          this,
          Invocation.getter(#app),
        ),
      ) as _i3.FirebaseApp);
  @override
  set app(_i3.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
        Invocation.setter(
          #tenantId,
          tenantId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i14.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
        Invocation.method(
          #useEmulator,
          [origin],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> useAuthEmulator(
    String? host,
    int? port,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #useAuthEmulator,
          [
            host,
            port,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
        Invocation.method(
          #applyActionCode,
          [code],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i4.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkActionCode,
          [code],
        ),
        returnValue:
            _i14.Future<_i4.ActionCodeInfo>.value(_FakeActionCodeInfo_7(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.ActionCodeInfo>.value(_FakeActionCodeInfo_7(
          this,
          Invocation.method(
            #checkActionCode,
            [code],
          ),
        )),
      ) as _i14.Future<_i4.ActionCodeInfo>);
  @override
  _i14.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #code: code,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i5.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #createUserWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSignInMethodsForEmail,
          [email],
        ),
        returnValue: _i14.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i14.Future<List<String>>.value(<String>[]),
      ) as _i14.Future<List<String>>);
  @override
  _i14.Future<_i5.UserCredential> getRedirectResult() => (super.noSuchMethod(
        Invocation.method(
          #getRedirectResult,
          [],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #getRedirectResult,
            [],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
        Invocation.method(
          #isSignInWithEmailLink,
          [emailLink],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i14.Stream<_i5.User?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i14.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i14.Stream<_i5.User?>.empty(),
      ) as _i14.Stream<_i5.User?>);
  @override
  _i14.Stream<_i5.User?> idTokenChanges() => (super.noSuchMethod(
        Invocation.method(
          #idTokenChanges,
          [],
        ),
        returnValue: _i14.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i14.Stream<_i5.User?>.empty(),
      ) as _i14.Stream<_i5.User?>);
  @override
  _i14.Stream<_i5.User?> userChanges() => (super.noSuchMethod(
        Invocation.method(
          #userChanges,
          [],
        ),
        returnValue: _i14.Stream<_i5.User?>.empty(),
        returnValueForMissingStub: _i14.Stream<_i5.User?>.empty(),
      ) as _i14.Stream<_i5.User?>);
  @override
  _i14.Future<void> sendPasswordResetEmail({
    required String? email,
    _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i4.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSignInLinkToEmail,
          [],
          {
            #email: email,
            #actionCodeSettings: actionCodeSettings,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLanguageCode,
          [languageCode],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setSettings({
    bool? appVerificationDisabledForTesting,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {
            #appVerificationDisabledForTesting:
                appVerificationDisabledForTesting,
            #userAccessGroup: userAccessGroup,
            #phoneNumber: phoneNumber,
            #smsCode: smsCode,
            #forceRecaptchaFlow: forceRecaptchaFlow,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setPersistence(_i4.Persistence? persistence) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPersistence,
          [persistence],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i5.UserCredential> signInAnonymously() => (super.noSuchMethod(
        Invocation.method(
          #signInAnonymously,
          [],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInAnonymously,
            [],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> signInWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCredential,
          [credential],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithCredential,
            [credential],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithCustomToken,
          [token],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithCustomToken,
            [token],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailLink,
          [],
          {
            #email: email,
            #emailLink: emailLink,
          },
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithEmailLink,
            [],
            {
              #email: email,
              #emailLink: emailLink,
            },
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> signInWithAuthProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithAuthProvider,
          [provider],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithAuthProvider,
            [provider],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> signInWithProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithProvider,
          [provider],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithProvider,
            [provider],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i14.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_9(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_9(
          this,
          Invocation.method(
            #signInWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i14.Future<_i5.ConfirmationResult>);
  @override
  _i14.Future<_i5.UserCredential> signInWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPopup,
          [provider],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #signInWithPopup,
            [provider],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<void> signInWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithRedirect,
          [provider],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPasswordResetCode,
          [code],
        ),
        returnValue: _i14.Future<String>.value(''),
        returnValueForMissingStub: _i14.Future<String>.value(''),
      ) as _i14.Future<String>);
  @override
  _i14.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i4.PhoneMultiFactorInfo? multiFactorInfo,
    required _i4.PhoneVerificationCompleted? verificationCompleted,
    required _i4.PhoneVerificationFailed? verificationFailed,
    required _i4.PhoneCodeSent? codeSent,
    required _i4.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i4.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhoneNumber,
          [],
          {
            #phoneNumber: phoneNumber,
            #multiFactorInfo: multiFactorInfo,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
            #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
            #timeout: timeout,
            #forceResendingToken: forceResendingToken,
            #multiFactorSession: multiFactorSession,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i6.GoogleSignIn {
  @override
  _i19.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i19.SignInOption.standard,
        returnValueForMissingStub: _i19.SignInOption.standard,
      ) as _i19.SignInOption);
  @override
  List<String> get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);
  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i14.Stream<_i6.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i14.Stream<_i6.GoogleSignInAccount?>.empty(),
        returnValueForMissingStub:
            _i14.Stream<_i6.GoogleSignInAccount?>.empty(),
      ) as _i14.Stream<_i6.GoogleSignInAccount?>);
  @override
  _i14.Future<_i6.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
          {
            #suppressErrors: suppressErrors,
            #reAuthenticate: reAuthenticate,
          },
        ),
        returnValue: _i14.Future<_i6.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i14.Future<_i6.GoogleSignInAccount?>.value(),
      ) as _i14.Future<_i6.GoogleSignInAccount?>);
  @override
  _i14.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
        returnValueForMissingStub: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
  @override
  _i14.Future<_i6.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i14.Future<_i6.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i14.Future<_i6.GoogleSignInAccount?>.value(),
      ) as _i14.Future<_i6.GoogleSignInAccount?>);
  @override
  _i14.Future<_i6.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i14.Future<_i6.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i14.Future<_i6.GoogleSignInAccount?>.value(),
      ) as _i14.Future<_i6.GoogleSignInAccount?>);
  @override
  _i14.Future<_i6.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i14.Future<_i6.GoogleSignInAccount?>.value(),
        returnValueForMissingStub:
            _i14.Future<_i6.GoogleSignInAccount?>.value(),
      ) as _i14.Future<_i6.GoogleSignInAccount?>);
  @override
  _i14.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i14.Future<bool>.value(false),
        returnValueForMissingStub: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i6.GoogleSignInAuthentication {}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i6.GoogleSignInAccount {
  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i14.Future<_i6.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
        Invocation.getter(#authentication),
        returnValue: _i14.Future<_i6.GoogleSignInAuthentication>.value(
            _FakeGoogleSignInAuthentication_10(
          this,
          Invocation.getter(#authentication),
        )),
        returnValueForMissingStub:
            _i14.Future<_i6.GoogleSignInAuthentication>.value(
                _FakeGoogleSignInAuthentication_10(
          this,
          Invocation.getter(#authentication),
        )),
      ) as _i14.Future<_i6.GoogleSignInAuthentication>);
  @override
  _i14.Future<Map<String, String>> get authHeaders => (super.noSuchMethod(
        Invocation.getter(#authHeaders),
        returnValue: _i14.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i14.Future<Map<String, String>>);
  @override
  _i14.Future<void> clearAuthCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthCache,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  @override
  bool get emailVerified => (super.noSuchMethod(
        Invocation.getter(#emailVerified),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i4.UserMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakeUserMetadata_11(
          this,
          Invocation.getter(#metadata),
        ),
        returnValueForMissingStub: _FakeUserMetadata_11(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i4.UserMetadata);
  @override
  List<_i4.UserInfo> get providerData => (super.noSuchMethod(
        Invocation.getter(#providerData),
        returnValue: <_i4.UserInfo>[],
        returnValueForMissingStub: <_i4.UserInfo>[],
      ) as List<_i4.UserInfo>);
  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i5.MultiFactor get multiFactor => (super.noSuchMethod(
        Invocation.getter(#multiFactor),
        returnValue: _FakeMultiFactor_12(
          this,
          Invocation.getter(#multiFactor),
        ),
        returnValueForMissingStub: _FakeMultiFactor_12(
          this,
          Invocation.getter(#multiFactor),
        ),
      ) as _i5.MultiFactor);
  @override
  _i14.Future<void> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [forceRefresh],
        ),
        returnValue: _i14.Future<String>.value(''),
        returnValueForMissingStub: _i14.Future<String>.value(''),
      ) as _i14.Future<String>);
  @override
  _i14.Future<_i4.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdTokenResult,
          [forceRefresh],
        ),
        returnValue: _i14.Future<_i4.IdTokenResult>.value(_FakeIdTokenResult_13(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i4.IdTokenResult>.value(_FakeIdTokenResult_13(
          this,
          Invocation.method(
            #getIdTokenResult,
            [forceRefresh],
          ),
        )),
      ) as _i14.Future<_i4.IdTokenResult>);
  @override
  _i14.Future<_i5.UserCredential> linkWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithCredential,
          [credential],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithCredential,
            [credential],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> linkWithProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithProvider,
          [provider],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithProvider,
            [provider],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> reauthenticateWithProvider(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithProvider,
          [provider],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithProvider,
            [provider],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<_i5.UserCredential> reauthenticateWithPopup(
          _i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithPopup,
          [provider],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithPopup,
            [provider],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<void> reauthenticateWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithRedirect,
          [provider],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i5.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPopup,
          [provider],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #linkWithPopup,
            [provider],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<void> linkWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithRedirect,
          [provider],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i5.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i5.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkWithPhoneNumber,
          [
            phoneNumber,
            verifier,
          ],
        ),
        returnValue:
            _i14.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_9(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.ConfirmationResult>.value(_FakeConfirmationResult_9(
          this,
          Invocation.method(
            #linkWithPhoneNumber,
            [
              phoneNumber,
              verifier,
            ],
          ),
        )),
      ) as _i14.Future<_i5.ConfirmationResult>);
  @override
  _i14.Future<_i5.UserCredential> reauthenticateWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticateWithCredential,
          [credential],
        ),
        returnValue:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i5.UserCredential>.value(_FakeUserCredential_8(
          this,
          Invocation.method(
            #reauthenticateWithCredential,
            [credential],
          ),
        )),
      ) as _i14.Future<_i5.UserCredential>);
  @override
  _i14.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> sendEmailVerification(
          [_i4.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendEmailVerification,
          [actionCodeSettings],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i5.User> unlink(String? providerId) => (super.noSuchMethod(
        Invocation.method(
          #unlink,
          [providerId],
        ),
        returnValue: _i14.Future<_i5.User>.value(_FakeUser_14(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
        returnValueForMissingStub: _i14.Future<_i5.User>.value(_FakeUser_14(
          this,
          Invocation.method(
            #unlink,
            [providerId],
          ),
        )),
      ) as _i14.Future<_i5.User>);
  @override
  _i14.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [newEmail],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> updatePhoneNumber(
          _i4.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneCredential],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDisplayName,
          [displayName],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
        Invocation.method(
          #updatePhotoURL,
          [photoURL],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> updateProfile({
    String? displayName,
    String? photoURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #displayName: displayName,
            #photoURL: photoURL,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i4.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyBeforeUpdateEmail,
          [
            newEmail,
            actionCodeSettings,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [UserCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCredential extends _i1.Mock implements _i5.UserCredential {}

/// A class which mocks [InternetConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnectionChecker extends _i1.Mock
    implements _i7.InternetConnectionChecker {
  @override
  Duration get checkInterval => (super.noSuchMethod(
        Invocation.getter(#checkInterval),
        returnValue: _FakeDuration_15(
          this,
          Invocation.getter(#checkInterval),
        ),
        returnValueForMissingStub: _FakeDuration_15(
          this,
          Invocation.getter(#checkInterval),
        ),
      ) as Duration);
  @override
  Duration get checkTimeout => (super.noSuchMethod(
        Invocation.getter(#checkTimeout),
        returnValue: _FakeDuration_15(
          this,
          Invocation.getter(#checkTimeout),
        ),
        returnValueForMissingStub: _FakeDuration_15(
          this,
          Invocation.getter(#checkTimeout),
        ),
      ) as Duration);
  @override
  List<_i7.AddressCheckOptions> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i7.AddressCheckOptions>[],
        returnValueForMissingStub: <_i7.AddressCheckOptions>[],
      ) as List<_i7.AddressCheckOptions>);
  @override
  set addresses(List<_i7.AddressCheckOptions>? value) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Future<bool> get hasConnection => (super.noSuchMethod(
        Invocation.getter(#hasConnection),
        returnValue: _i14.Future<bool>.value(false),
        returnValueForMissingStub: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
  @override
  _i14.Future<_i7.InternetConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i14.Future<_i7.InternetConnectionStatus>.value(
            _i7.InternetConnectionStatus.connected),
        returnValueForMissingStub:
            _i14.Future<_i7.InternetConnectionStatus>.value(
                _i7.InternetConnectionStatus.connected),
      ) as _i14.Future<_i7.InternetConnectionStatus>);
  @override
  _i14.Stream<_i7.InternetConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i14.Stream<_i7.InternetConnectionStatus>.empty(),
        returnValueForMissingStub:
            _i14.Stream<_i7.InternetConnectionStatus>.empty(),
      ) as _i14.Stream<_i7.InternetConnectionStatus>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isActivelyChecking => (super.noSuchMethod(
        Invocation.getter(#isActivelyChecking),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i14.Future<_i7.AddressCheckResult> isHostReachable(
          _i7.AddressCheckOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHostReachable,
          [options],
        ),
        returnValue: _i14.Future<_i7.AddressCheckResult>.value(
            _FakeAddressCheckResult_16(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
        returnValueForMissingStub: _i14.Future<_i7.AddressCheckResult>.value(
            _FakeAddressCheckResult_16(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
      ) as _i14.Future<_i7.AddressCheckResult>);
}

/// A class which mocks [OneSignal].
///
/// See the documentation for Mockito's code generation for more information.
class MockOneSignal extends _i1.Mock implements _i8.OneSignal {
  @override
  _i14.Future<void> setAppId(String? appId) => (super.noSuchMethod(
        Invocation.method(
          #setAppId,
          [appId],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setLogLevel(
    _i8.OSLogLevel? logLevel,
    _i8.OSLogLevel? visualLevel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [
            logLevel,
            visualLevel,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  void setNotificationOpenedHandler(_i8.OpenedNotificationHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setNotificationOpenedHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setSubscriptionObserver(_i8.SubscriptionChangedHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setSubscriptionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPermissionObserver(_i8.PermissionChangeHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setPermissionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setEmailSubscriptionObserver(
          _i8.EmailSubscriptionChangeHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setEmailSubscriptionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setSMSSubscriptionObserver(_i8.SMSSubscriptionChangeHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setSMSSubscriptionObserver,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setInAppMessageClickedHandler(_i8.InAppMessageClickedHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setInAppMessageClickedHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnWillDisplayInAppMessageHandler(
          _i8.OnWillDisplayInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnWillDisplayInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnDidDisplayInAppMessageHandler(
          _i8.OnDidDisplayInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnDidDisplayInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnWillDismissInAppMessageHandler(
          _i8.OnWillDismissInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnWillDismissInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOnDidDismissInAppMessageHandler(
          _i8.OnDidDismissInAppMessageHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setOnDidDismissInAppMessageHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setNotificationWillShowInForegroundHandler(
          _i8.NotificationWillShowInForegroundHandler? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setNotificationWillShowInForegroundHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void completeNotification(
    String? notificationId,
    bool? shouldDisplay,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #completeNotification,
          [
            notificationId,
            shouldDisplay,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Future<void> setLaunchURLsInApp(bool? isEnabled) => (super.noSuchMethod(
        Invocation.method(
          #setLaunchURLsInApp,
          [isEnabled],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setRequiresUserPrivacyConsent(bool? required) =>
      (super.noSuchMethod(
        Invocation.method(
          #setRequiresUserPrivacyConsent,
          [required],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> consentGranted(bool? granted) => (super.noSuchMethod(
        Invocation.method(
          #consentGranted,
          [granted],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<bool> userProvidedPrivacyConsent() => (super.noSuchMethod(
        Invocation.method(
          #userProvidedPrivacyConsent,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
        returnValueForMissingStub: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
  @override
  _i14.Future<bool> requiresUserPrivacyConsent() => (super.noSuchMethod(
        Invocation.method(
          #requiresUserPrivacyConsent,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
        returnValueForMissingStub: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
  @override
  _i14.Future<bool> promptUserForPushNotificationPermission(
          {bool? fallbackToSettings = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #promptUserForPushNotificationPermission,
          [],
          {#fallbackToSettings: fallbackToSettings},
        ),
        returnValue: _i14.Future<bool>.value(false),
        returnValueForMissingStub: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);
  @override
  _i14.Future<Map<String, dynamic>> sendTag(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTag,
          [
            key,
            value,
          ],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> sendTags(Map<String, dynamic>? tags) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTags,
          [tags],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> getTags() => (super.noSuchMethod(
        Invocation.method(
          #getTags,
          [],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> deleteTag(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTag,
          [key],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> deleteTags(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTags,
          [keys],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<_i8.OSDeviceState?> getDeviceState() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceState,
          [],
        ),
        returnValue: _i14.Future<_i8.OSDeviceState?>.value(),
        returnValueForMissingStub: _i14.Future<_i8.OSDeviceState?>.value(),
      ) as _i14.Future<_i8.OSDeviceState?>);
  @override
  _i14.Future<void> disablePush(bool? disable) => (super.noSuchMethod(
        Invocation.method(
          #disablePush,
          [disable],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<Map<String, dynamic>> postNotificationWithJson(
          Map<String, dynamic>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #postNotificationWithJson,
          [json],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> postNotification(
          _i8.OSCreateNotification? notification) =>
      (super.noSuchMethod(
        Invocation.method(
          #postNotification,
          [notification],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<void> clearOneSignalNotifications() => (super.noSuchMethod(
        Invocation.method(
          #clearOneSignalNotifications,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> enterLiveActivity(
    String? activityId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #enterLiveActivity,
          [
            activityId,
            token,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> exitLiveActivity(String? activityId) => (super.noSuchMethod(
        Invocation.method(
          #exitLiveActivity,
          [activityId],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  void removeNotification(int? notificationId) => super.noSuchMethod(
        Invocation.method(
          #removeNotification,
          [notificationId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Future<void> promptLocationPermission() => (super.noSuchMethod(
        Invocation.method(
          #promptLocationPermission,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setLocationShared(bool? shared) => (super.noSuchMethod(
        Invocation.method(
          #setLocationShared,
          [shared],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> setEmail({
    required String? email,
    String? emailAuthHashToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setEmail,
          [],
          {
            #email: email,
            #emailAuthHashToken: emailAuthHashToken,
          },
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> logoutEmail() => (super.noSuchMethod(
        Invocation.method(
          #logoutEmail,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<Map<String, dynamic>> setSMSNumber({
    required String? smsNumber,
    String? smsAuthHashToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSMSNumber,
          [],
          {
            #smsNumber: smsNumber,
            #smsAuthHashToken: smsAuthHashToken,
          },
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> logoutSMSNumber() => (super.noSuchMethod(
        Invocation.method(
          #logoutSMSNumber,
          [],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> setExternalUserId(
    String? externalId, [
    String? authHashToken,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setExternalUserId,
          [
            externalId,
            authHashToken,
          ],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> removeExternalUserId() =>
      (super.noSuchMethod(
        Invocation.method(
          #removeExternalUserId,
          [],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<Map<String, dynamic>> setLanguage(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i14.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i14.Future<Map<String, dynamic>>);
  @override
  _i14.Future<void> addTrigger(
    String? key,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTrigger,
          [
            key,
            value,
          ],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> addTriggers(Map<String, Object>? triggers) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTriggers,
          [triggers],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> removeTriggerForKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeTriggerForKey,
          [key],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<void> removeTriggersForKeys(List<String>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTriggersForKeys,
          [keys],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<Object?> getTriggerValueForKey(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTriggerValueForKey,
          [key],
        ),
        returnValue: _i14.Future<Object?>.value(),
        returnValueForMissingStub: _i14.Future<Object?>.value(),
      ) as _i14.Future<Object?>);
  @override
  _i14.Future<void> pauseInAppMessages(bool? pause) => (super.noSuchMethod(
        Invocation.method(
          #pauseInAppMessages,
          [pause],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  _i14.Future<_i8.OSOutcomeEvent> sendOutcome(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOutcome,
          [name],
        ),
        returnValue:
            _i14.Future<_i8.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_17(
          this,
          Invocation.method(
            #sendOutcome,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i8.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_17(
          this,
          Invocation.method(
            #sendOutcome,
            [name],
          ),
        )),
      ) as _i14.Future<_i8.OSOutcomeEvent>);
  @override
  _i14.Future<_i8.OSOutcomeEvent> sendUniqueOutcome(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendUniqueOutcome,
          [name],
        ),
        returnValue:
            _i14.Future<_i8.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_17(
          this,
          Invocation.method(
            #sendUniqueOutcome,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i8.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_17(
          this,
          Invocation.method(
            #sendUniqueOutcome,
            [name],
          ),
        )),
      ) as _i14.Future<_i8.OSOutcomeEvent>);
  @override
  _i14.Future<_i8.OSOutcomeEvent> sendOutcomeWithValue(
    String? name,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOutcomeWithValue,
          [
            name,
            value,
          ],
        ),
        returnValue:
            _i14.Future<_i8.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_17(
          this,
          Invocation.method(
            #sendOutcomeWithValue,
            [
              name,
              value,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i14.Future<_i8.OSOutcomeEvent>.value(_FakeOSOutcomeEvent_17(
          this,
          Invocation.method(
            #sendOutcomeWithValue,
            [
              name,
              value,
            ],
          ),
        )),
      ) as _i14.Future<_i8.OSOutcomeEvent>);
}

/// A class which mocks [LanguageBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageBloc extends _i1.Mock implements _i9.LanguageBloc {
  @override
  _i9.LanguageState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeLanguageState_18(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeLanguageState_18(
          this,
          Invocation.getter(#state),
        ),
      ) as _i9.LanguageState);
  @override
  _i14.Stream<_i9.LanguageState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i14.Stream<_i9.LanguageState>.empty(),
        returnValueForMissingStub: _i14.Stream<_i9.LanguageState>.empty(),
      ) as _i14.Stream<_i9.LanguageState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void add(_i9.LanguageEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i9.LanguageEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i9.LanguageState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i9.LanguageEvent>(
    _i20.EventHandler<E, _i9.LanguageState>? handler, {
    _i20.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(
          _i20.Transition<_i9.LanguageEvent, _i9.LanguageState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i14.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
  @override
  void onChange(_i20.Change<_i9.LanguageState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
